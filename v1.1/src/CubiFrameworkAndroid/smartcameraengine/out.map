# compiler: R8
# compiler_version: 1.5.64
# pg_map_id: de61b34
com.android.tools.r8.GeneratedOutlineSupport -> a.a.a.a.a:
    java.lang.StringBuilder outline0(java.lang.String) -> a
com.cubi.smartcameraengine.AutoEditing -> com.cubi.smartcameraengine.AutoEditing:
    int count -> j
    int inputSize -> h
    int channel -> i
    org.opencv.core.MatOfDouble mean -> e
    org.opencv.core.MatOfDouble dev -> f
    int no_frame -> g
    java.lang.String scorelist -> s
    android.graphics.Bitmap[] resizedBitmap -> a
    org.opencv.core.Mat originalMat -> d
    org.opencv.core.Mat lap -> c
    org.tensorflow.lite.Interpreter tflite -> t
    java.io.File file -> u
    java.io.FileWriter fw -> v
    android.graphics.Bitmap[] originalBitmap -> b
    long videoPresentTimestamp -> n
    int seqcount -> r
    long lastCalculatedTimestamp -> m
    float[][] outputValues -> l
    int w -> p
    float[][][][] inputValues -> k
    long startTimestamp -> o
    int h -> q
    1:5:void <clinit>():65:69 -> <clinit>
    1:24:void <init>():32:55 -> <init>
    1:20:void convertImage():114:133 -> a
    1:12:void appendImages(android.graphics.Bitmap):205:216 -> appendImages
    13:16:void initMat():78:81 -> appendImages
    13:16:double getBlurScore():142 -> appendImages
    13:16:void appendImages(android.graphics.Bitmap):216 -> appendImages
    17:29:double getBlurScore():150:162 -> appendImages
    17:29:void appendImages(android.graphics.Bitmap):216 -> appendImages
    30:30:void appendImages(android.graphics.Bitmap):216:216 -> appendImages
    31:57:float getEditingScore():171:197 -> appendImages
    31:57:void appendImages(android.graphics.Bitmap):216 -> appendImages
    58:68:void appendImages(android.graphics.Bitmap):216:226 -> appendImages
    1:1:void loadTFLite(android.content.Context):271:271 -> loadTFLite
    2:7:java.nio.MappedByteBuffer loadModelFile(android.content.Context,java.lang.String):101:106 -> loadTFLite
    2:7:void loadTFLite(android.content.Context):271 -> loadTFLite
    8:12:void loadTFLite(android.content.Context):271:275 -> loadTFLite
    1:5:void saveFile():283:287 -> saveFile
    1:1:void setPresentVideoTimeStamp(long):262:262 -> setPresentVideoTimeStamp
    1:5:void initVaraibles():87:91 -> setStartVideoTimeStamp
    1:5:void setStartVideoTimeStamp(long):233 -> setStartVideoTimeStamp
    6:14:void setStartVideoTimeStamp(long):234:242 -> setStartVideoTimeStamp
    1:3:void setTimestamp():325:327 -> setTimestamp
    1:7:java.lang.Boolean verifyNeedToSaveImageTime():248:254 -> verifyNeedToSaveImageTime
com.cubi.smartcameraengine.BuildConfig -> com.cubi.smartcameraengine.BuildConfig:
    1:1:void <init>():6:6 -> <init>
com.cubi.smartcameraengine.CameraHandler -> com.cubi.smartcameraengine.CameraHandler:
    float eventY -> d
    float eventX -> c
    com.cubi.smartcameraengine.CameraThread thread -> e
    int viewHeight -> b
    int viewWidth -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):29:29 -> <init>
    2:10:void <init>(com.cubi.smartcameraengine.CameraThread):22:30 -> <init>
    1:1:void startPreview(int,int):34:34 -> a
    2:12:void stopPreview(boolean):43:53 -> a
    13:17:void changeManualFocusPoint(float,float,int,int):57:61 -> a
    18:18:void changeAutoFocus():65:65 -> a
    19:19:void adjustBrightness(double):79:79 -> a
    1:1:void setZoom():69:69 -> b
    1:1:void switchFlashMode():73:73 -> c
    1:1:void switchLensFacing():76:76 -> d
    1:55:void handleMessage(android.os.Message):85:139 -> handleMessage
    56:57:void handleMessage(android.os.Message):134:135 -> handleMessage
    58:59:void handleMessage(android.os.Message):129:130 -> handleMessage
    60:61:void handleMessage(android.os.Message):124:125 -> handleMessage
    62:63:void handleMessage(android.os.Message):119:120 -> handleMessage
    64:65:void handleMessage(android.os.Message):114:115 -> handleMessage
    66:85:void handleMessage(android.os.Message):92:111 -> handleMessage
    86:86:void handleMessage(android.os.Message):97:97 -> handleMessage
    87:88:void handleMessage(android.os.Message) -> handleMessage
com.cubi.smartcameraengine.CameraRecorder -> com.cubi.smartcameraengine.CameraRecorder:
    boolean flipVertical -> m
    boolean mute -> n
    android.opengl.GLSurfaceView glSurfaceView -> d
    int cameraHeight -> j
    com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener mediaEncoderListener -> r
    com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper muxer -> f
    int fileHeight -> h
    int cameraWidth -> i
    boolean flipHorizontal -> l
    int fileWidth -> g
    boolean recordNoFilter -> q
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> b
    com.cubi.smartcameraengine.CameraHandler cameraHandler -> c
    boolean flashSupport -> e
    com.cubi.smartcameraengine.LensFacing lensFacing -> k
    com.cubi.smartcameraengine.egl.GlPreviewRenderer glPreviewRenderer -> a
    android.hardware.camera2.CameraManager cameraManager -> o
    int degrees -> p
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,com.cubi.smartcameraengine.objectdetection.OverlayView,android.content.Context):79:79 -> <init>
    2:230:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,com.cubi.smartcameraengine.objectdetection.OverlayView,android.content.Context):31:259 -> <init>
    231:255:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,com.cubi.smartcameraengine.objectdetection.OverlayView,android.content.Context):82:106 -> <init>
    1:1:boolean access$202(com.cubi.smartcameraengine.CameraRecorder,boolean):24:24 -> a
    2:43:void startPreview(android.graphics.SurfaceTexture):125:166 -> a
    44:45:void notifyOnError(java.lang.Exception):433:434 -> a
    44:45:void access$1400(com.cubi.smartcameraengine.CameraRecorder,java.lang.Exception):24 -> a
    1:2:void adjustBrightness(double):214:215 -> adjustBrightness
    1:2:void changeAutoFocus():185:186 -> changeAutoFocus
    1:2:void changeManualFocusPoint(float,float,int,int):179:180 -> changeManualFocusPoint
    1:1:void contextSet(android.content.Context):427:427 -> contextSet
    1:1:void frameSet(com.cubi.smartcameraengine.objectdetection.OverlayView):422:422 -> frameSet
    1:1:com.cubi.smartcameraengine.CameraRecorder$Orientation getOrientation():253:253 -> getOrientation
    1:1:boolean isFlashSupport():237:237 -> isFlashSupport
    1:1:void pause():202:202 -> pause
    1:8:void release():393:400 -> release
    9:15:void destroyPreview():242:248 -> release
    9:15:void release():403 -> release
    1:1:void setDelegate(com.cubi.smartcameraengine.capture.DelegateInterface):121:121 -> setDelegate
    1:2:void setFastSlowMode(int):197:198 -> setFastSlowMode
    1:2:void setFileSize(int,int):115:116 -> setFileSize
    1:1:void setFilter(com.cubi.smartcameraengine.egl.filter.GlFilter):172:172 -> setFilter
    1:2:void setGestureScale(float):220:221 -> setGestureScale
    1:1:void setOrientation(com.cubi.smartcameraengine.CameraRecorder$Orientation):232:232 -> setOrientation
    1:1:void setRecordingMode(int):412:412 -> setRecordingMode
    1:2:void setZoom():191:192 -> setZoom
    1:56:void start(java.lang.String):292:347 -> start
    1:4:void stop():354:357 -> stop
    5:6:void notifyOnError(java.lang.Exception):433:434 -> stop
    5:6:void stop():381 -> stop
    7:11:void stop():382:386 -> stop
    1:3:void switchFlashMode():207:209 -> switchFlashMode
    1:2:void switchLensFacing():226:227 -> switchLensFacing
com.cubi.smartcameraengine.CameraRecorder$1 -> com.cubi.smartcameraengine.CameraRecorder$a:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):106:106 -> <init>
    1:1:void onCreated(android.graphics.SurfaceTexture):109:109 -> onCreated
    2:2:void com.cubi.smartcameraengine.CameraRecorder.access$000(com.cubi.smartcameraengine.CameraRecorder,android.graphics.SurfaceTexture):24:24 -> onCreated
    2:2:void onCreated(android.graphics.SurfaceTexture):109 -> onCreated
com.cubi.smartcameraengine.CameraRecorder$2 -> com.cubi.smartcameraengine.CameraRecorder$b:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):126:126 -> <init>
    1:2:void onStart(android.util.Size,boolean):130:131 -> a
    3:3:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> a
    3:3:void onStart(android.util.Size,boolean):131 -> a
    4:8:void onStart(android.util.Size,boolean):132:136 -> a
    9:9:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):24:24 -> a
    9:9:void onStart(android.util.Size,boolean):136 -> a
    10:10:boolean com.cubi.smartcameraengine.CameraRecorder.access$200(com.cubi.smartcameraengine.CameraRecorder):24:24 -> a
    10:10:void onStart(android.util.Size,boolean):137 -> a
    11:17:void onStart(android.util.Size,boolean):137:143 -> a
    18:18:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$500(com.cubi.smartcameraengine.CameraRecorder):24:24 -> a
    18:18:void onStart(android.util.Size,boolean):143 -> a
    19:30:void onStart(android.util.Size,boolean):143:154 -> a
    31:31:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> a
    31:31:void onStart(android.util.Size,boolean):154 -> a
    32:33:void onStart(android.util.Size,boolean):155:156 -> a
com.cubi.smartcameraengine.CameraRecorder$2$1 -> com.cubi.smartcameraengine.CameraRecorder$b$a:
    com.cubi.smartcameraengine.CameraRecorder$2 this$1 -> c
    float val$previewHeight -> b
    float val$previewWidth -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder$2,float,float):143:143 -> <init>
    1:1:void run():146:146 -> run
    2:2:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    2:2:void run():146 -> run
    3:3:int com.cubi.smartcameraengine.CameraRecorder.access$402(com.cubi.smartcameraengine.CameraRecorder,int):24:24 -> run
    3:3:void run():147 -> run
    4:4:int com.cubi.smartcameraengine.CameraRecorder.access$400(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    4:4:void run():148 -> run
    5:6:void run():148:149 -> run
    7:7:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    7:7:void run():149 -> run
    8:8:void run():149:149 -> run
com.cubi.smartcameraengine.CameraRecorder$3 -> com.cubi.smartcameraengine.CameraRecorder$c:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):259:259 -> <init>
    1:3:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):262:264 -> onPrepared
    4:4:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> onPrepared
    4:4:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):264 -> onPrepared
    5:5:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):265:265 -> onPrepared
    1:3:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):273:275 -> onStopped
    4:4:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> onStopped
    4:4:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):275 -> onStopped
    5:11:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):276:282 -> onStopped
com.cubi.smartcameraengine.CameraRecorder$4 -> com.cubi.smartcameraengine.CameraRecorder$d:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> b
    java.lang.String val$filePath -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder,java.lang.String):300:300 -> <init>
    1:10:void run():305:314 -> run
    11:11:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$602(com.cubi.smartcameraengine.CameraRecorder,com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper):24:24 -> run
    11:11:void run():314 -> run
    12:12:void run():317:317 -> run
    13:13:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    13:13:void run():318 -> run
    14:14:void run():318:318 -> run
    15:15:com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    15:15:void run():319 -> run
    16:16:void run():319:319 -> run
    17:17:int com.cubi.smartcameraengine.CameraRecorder.access$800(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    17:17:void run():320 -> run
    18:18:void run():320:320 -> run
    19:19:int com.cubi.smartcameraengine.CameraRecorder.access$900(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    19:19:void run():321 -> run
    20:20:void run():321:321 -> run
    21:21:boolean com.cubi.smartcameraengine.CameraRecorder.access$1000(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    21:21:void run():322 -> run
    22:22:void run():322:322 -> run
    23:23:boolean com.cubi.smartcameraengine.CameraRecorder.access$1100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    23:23:void run():323 -> run
    24:24:void run():323:323 -> run
    25:25:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$500(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    25:25:void run():325 -> run
    26:26:void run():325:325 -> run
    27:27:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$500(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    27:27:void run():326 -> run
    28:28:void run():326:326 -> run
    29:29:boolean com.cubi.smartcameraengine.CameraRecorder.access$1200(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    29:29:void run():327 -> run
    30:30:void run():327:327 -> run
    31:31:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    31:31:void run():328 -> run
    32:34:void run():328:330 -> run
    35:35:boolean com.cubi.smartcameraengine.CameraRecorder.access$1300(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    35:35:void run():330 -> run
    36:36:void run():332:332 -> run
    37:37:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    37:37:void run():332 -> run
    38:38:void run():332:332 -> run
    39:39:com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    39:39:void run():332 -> run
    40:42:void run():332:334 -> run
    43:43:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    43:43:void run():334 -> run
    44:45:void run():334:335 -> run
    46:46:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    46:46:void run():335 -> run
    47:49:void run():335:337 -> run
    50:50:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    50:50:void run():337 -> run
    51:51:void run():338:338 -> run
    52:52:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    52:52:void run():338 -> run
    53:56:void run():338:341 -> run
com.cubi.smartcameraengine.CameraRecorder$5 -> com.cubi.smartcameraengine.CameraRecorder$e:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):357:357 -> <init>
    1:1:void run():363:363 -> run
    2:2:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    2:2:void run():363 -> run
    3:3:void run():364:364 -> run
    4:4:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):24:24 -> run
    4:4:void run():364 -> run
    5:6:void run():364:365 -> run
    7:7:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$602(com.cubi.smartcameraengine.CameraRecorder,com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper):24:24 -> run
    7:7:void run():365 -> run
    8:13:void run():371:376 -> run
    14:15:void com.cubi.smartcameraengine.CameraRecorder.notifyOnDone():416:417 -> run
    14:15:void com.cubi.smartcameraengine.CameraRecorder.access$1500(com.cubi.smartcameraengine.CameraRecorder):24 -> run
    14:15:void run():376 -> run
com.cubi.smartcameraengine.CameraRecorder$Orientation -> com.cubi.smartcameraengine.CameraRecorder$Orientation:
    com.cubi.smartcameraengine.CameraRecorder$Orientation[] $VALUES -> a
    1:1:void <clinit>():48:48 -> <clinit>
    2:2:void <clinit>():47:47 -> <clinit>
    1:1:void <init>(java.lang.String,int):47:47 -> <init>
    1:1:com.cubi.smartcameraengine.CameraRecorder$Orientation valueOf(java.lang.String):47:47 -> valueOf
    1:1:com.cubi.smartcameraengine.CameraRecorder$Orientation[] values():47:47 -> values
com.cubi.smartcameraengine.CameraRecorderBuilder -> com.cubi.smartcameraengine.CameraRecorderBuilder:
    int cameraHeight -> l
    boolean mute -> i
    boolean recordNoFilter -> j
    int cameraWidth -> k
    android.opengl.GLSurfaceView glSurfaceView -> a
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> m
    int fileHeight -> f
    int fileWidth -> e
    com.cubi.smartcameraengine.objectdetection.OverlayView overlay -> n
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> d
    com.cubi.smartcameraengine.LensFacing lensFacing -> b
    boolean flipVertical -> g
    boolean flipHorizontal -> h
    android.app.Activity activity -> c
    1:1:void <init>(android.app.Activity,android.opengl.GLSurfaceView):32:32 -> <init>
    2:20:void <init>(android.app.Activity,android.opengl.GLSurfaceView):17:35 -> <init>
    1:24:com.cubi.smartcameraengine.CameraRecorder build():91:114 -> build
    25:25:com.cubi.smartcameraengine.CameraRecorder build():92:92 -> build
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder cameraRecordListener(com.cubi.smartcameraengine.CameraRecordListener):39:39 -> cameraRecordListener
    1:2:com.cubi.smartcameraengine.CameraRecorderBuilder cameraSize(int,int):55:56 -> cameraSize
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder filter(com.cubi.smartcameraengine.egl.filter.GlFilter):44:44 -> filter
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder flipHorizontal(boolean):71:71 -> flipHorizontal
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder flipVertical(boolean):76:76 -> flipVertical
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder frameSet(com.cubi.smartcameraengine.objectdetection.OverlayView):66:66 -> frameSet
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder lensFacing(com.cubi.smartcameraengine.LensFacing):61:61 -> lensFacing
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder mute(boolean):81:81 -> mute
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder recordNoFilter(boolean):86:86 -> recordNoFilter
    1:2:com.cubi.smartcameraengine.CameraRecorderBuilder videoSize(int,int):49:50 -> videoSize
com.cubi.smartcameraengine.CameraThread -> com.cubi.smartcameraengine.CameraThread:
    boolean isFlashTorch -> m
    android.graphics.Matrix matrix -> M
    boolean flashSupport -> o
    android.hardware.camera2.CaptureRequest$Builder requestBuilder -> e
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> j
    int yRowStride -> I
    android.graphics.Rect sensorArraySize -> g
    boolean isRect -> u
    boolean isProcessingFrame -> w
    java.lang.String mCameraId -> p
    com.cubi.smartcameraengine.objectdetection.MultiBoxTracker tracker -> E
    com.cubi.smartcameraengine.CameraHandler handler -> b
    boolean startEvent -> s
    android.util.Size cameraSize -> l
    byte[][] yuvBytes -> G
    android.graphics.Bitmap rgbFrameBitmap -> A
    android.graphics.Matrix cropToFrameTransform -> D
    android.graphics.SurfaceTexture surfaceTexture -> h
    android.hardware.camera2.CameraDevice$StateCallback cameraDeviceCallback -> N
    com.cubi.smartcameraengine.objectdetection.OverlayView trackingOverlay -> y
    java.lang.Runnable imageConverter -> J
    android.os.Handler backgroundHandler -> L
    android.media.ImageReader previewReader -> v
    android.os.HandlerThread handlerThread -> K
    android.hardware.camera2.CameraDevice cameraDevice -> d
    com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener listener -> i
    com.cubi.smartcameraengine.objectdetection.Classifier detector -> F
    boolean isFirst -> r
    boolean previewStarted -> t
    int[] rgbBytes -> H
    android.graphics.Bitmap croppedBitmap -> B
    boolean computingDetection -> z
    long timestamp -> x
    com.cubi.smartcameraengine.LensFacing lensFacing -> n
    android.hardware.camera2.CameraManager cameraManager -> k
    android.hardware.camera2.CameraCaptureSession$StateCallback cameraCaptureSessionCallback -> O
    java.lang.Object readyFence -> a
    android.graphics.Matrix frameToCropTransform -> C
    android.hardware.camera2.CameraCaptureSession cameraCaptureSession -> f
    boolean isRunning -> c
    android.graphics.Rect arraySize -> q
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):125:125 -> <init>
    2:121:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):54:173 -> <init>
    122:130:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):126:134 -> <init>
    1:1:boolean access$2002(com.cubi.smartcameraengine.CameraThread,boolean):48:48 -> a
    2:30:void startPreview(int,int):245:273 -> a
    31:31:android.util.Size getClosestSupportedSize(java.util.List,int,int):400:400 -> a
    31:31:void startPreview(int,int):273 -> a
    32:32:void startPreview(int,int):273:273 -> a
    33:50:void startPreview(int,int):271:288 -> a
    51:73:void changeManualFocusPoint(float,float,int,int):472:494 -> a
    74:81:void changeAutoFocus():518:525 -> a
    82:109:void processAutoEditing(android.media.Image):568:595 -> a
    110:138:void processAutoEditing(android.media.Image):590:618 -> a
    1:1:boolean access$202(com.cubi.smartcameraengine.CameraThread,boolean):48:48 -> b
    2:9:void lockFocus():530:537 -> b
    1:1:boolean access$502(com.cubi.smartcameraengine.CameraThread,boolean):48:48 -> c
    2:6:void setZoom():542:546 -> c
    1:1:boolean access$802(com.cubi.smartcameraengine.CameraThread,boolean):48:48 -> d
    2:15:void stopPreview():418:431 -> d
    1:14:void switchFlashMode():500:513 -> e
    1:8:void switchLensFacing():551:558 -> f
    1:6:void fillBytes(android.media.Image$Plane[],byte[][]):708:713 -> fillBytes
    1:8:com.cubi.smartcameraengine.CameraHandler getHandler():139:146 -> getHandler
    9:9:com.cubi.smartcameraengine.CameraHandler getHandler():145:145 -> getHandler
    1:2:int[] getRgbBytes():718:719 -> getRgbBytes
    1:8:void initObjectDetection():735:742 -> initObjectDetection
    9:26:void initObjectDetection():741:758 -> initObjectDetection
    27:35:void initObjectDetection():757:765 -> initObjectDetection
    1:4:void newTracker():781:784 -> newTracker
    1:25:void processImage(android.media.Image):625:649 -> processImage
    1:5:android.graphics.RectF rectRotate90(android.graphics.RectF):724:728 -> rectRotate90
    1:16:void run():219:234 -> run
    17:17:void run():225:225 -> run
    1:2:void runInBackground(java.lang.Runnable):702:703 -> runInBackground
    1:21:void setExposure(double):439:459 -> setExposure
com.cubi.smartcameraengine.CameraThread$1 -> com.cubi.smartcameraengine.CameraThread$a:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):149:149 -> <init>
    1:3:void onDisconnected(android.hardware.camera2.CameraDevice):160:162 -> onDisconnected
    4:4:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):48:48 -> onDisconnected
    4:4:void onDisconnected(android.hardware.camera2.CameraDevice):162 -> onDisconnected
    1:3:void onError(android.hardware.camera2.CameraDevice,int):167:169 -> onError
    4:4:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):48:48 -> onError
    4:4:void onError(android.hardware.camera2.CameraDevice,int):169 -> onError
    1:2:void onOpened(android.hardware.camera2.CameraDevice):152:153 -> onOpened
    3:3:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):48:48 -> onOpened
    3:3:void onOpened(android.hardware.camera2.CameraDevice):153 -> onOpened
    4:106:void com.cubi.smartcameraengine.CameraThread.createCaptureSession():293:395 -> onOpened
    4:106:void com.cubi.smartcameraengine.CameraThread.access$100(com.cubi.smartcameraengine.CameraThread):48 -> onOpened
    4:106:void onOpened(android.hardware.camera2.CameraDevice):154 -> onOpened
    107:107:void onOpened(android.hardware.camera2.CameraDevice):155:155 -> onOpened
com.cubi.smartcameraengine.CameraThread$2 -> com.cubi.smartcameraengine.CameraThread$b:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):173:173 -> <init>
    1:1:void onConfigured(android.hardware.camera2.CameraCaptureSession):176:176 -> onConfigured
    2:2:android.hardware.camera2.CameraCaptureSession com.cubi.smartcameraengine.CameraThread.access$302(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraCaptureSession):48:48 -> onConfigured
    2:2:void onConfigured(android.hardware.camera2.CameraCaptureSession):176 -> onConfigured
    3:16:void com.cubi.smartcameraengine.CameraThread.updatePreview():194:207 -> onConfigured
    3:16:void com.cubi.smartcameraengine.CameraThread.access$400(com.cubi.smartcameraengine.CameraThread):48 -> onConfigured
    3:16:void onConfigured(android.hardware.camera2.CameraCaptureSession):177 -> onConfigured
com.cubi.smartcameraengine.CameraThread$3 -> a.b.a.a:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):308:308 -> <init>
    1:3:void onImageAvailable(android.media.ImageReader):311:313 -> onImageAvailable
    4:4:boolean com.cubi.smartcameraengine.CameraThread.access$500(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    4:4:void onImageAvailable(android.media.ImageReader):313 -> onImageAvailable
    5:5:void onImageAvailable(android.media.ImageReader):313:313 -> onImageAvailable
    6:6:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    6:6:void onImageAvailable(android.media.ImageReader):314 -> onImageAvailable
    7:7:com.cubi.smartcameraengine.objectdetection.OverlayView com.cubi.smartcameraengine.CameraThread.access$700(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    7:7:void onImageAvailable(android.media.ImageReader):315 -> onImageAvailable
    8:9:void onImageAvailable(android.media.ImageReader):315:316 -> onImageAvailable
    10:10:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    10:10:void onImageAvailable(android.media.ImageReader):316 -> onImageAvailable
    11:12:void onImageAvailable(android.media.ImageReader):316:317 -> onImageAvailable
    13:13:com.cubi.smartcameraengine.objectdetection.OverlayView com.cubi.smartcameraengine.CameraThread.access$700(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    13:13:void onImageAvailable(android.media.ImageReader):317 -> onImageAvailable
    14:77:void onImageAvailable(android.media.ImageReader):317:380 -> onImageAvailable
    78:78:void onImageAvailable(android.media.ImageReader):331:331 -> onImageAvailable
    79:79:boolean com.cubi.smartcameraengine.CameraThread.access$800(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    79:79:void onImageAvailable(android.media.ImageReader):331 -> onImageAvailable
    80:128:void onImageAvailable(android.media.ImageReader):332:380 -> onImageAvailable
    129:135:void onImageAvailable(android.media.ImageReader):337:343 -> onImageAvailable
    136:136:byte[][] com.cubi.smartcameraengine.CameraThread.access$900(com.cubi.smartcameraengine.CameraThread):48:48 -> onImageAvailable
    136:136:void onImageAvailable(android.media.ImageReader):343 -> onImageAvailable
    137:138:void onImageAvailable(android.media.ImageReader):343:344 -> onImageAvailable
    139:139:int com.cubi.smartcameraengine.CameraThread.access$1002(com.cubi.smartcameraengine.CameraThread,int):48:48 -> onImageAvailable
    139:139:void onImageAvailable(android.media.ImageReader):344 -> onImageAvailable
    140:143:void onImageAvailable(android.media.ImageReader):345:348 -> onImageAvailable
    144:144:java.lang.Runnable com.cubi.smartcameraengine.CameraThread.access$1102(com.cubi.smartcameraengine.CameraThread,java.lang.Runnable):48:48 -> onImageAvailable
    144:144:void onImageAvailable(android.media.ImageReader):348 -> onImageAvailable
    145:153:void onImageAvailable(android.media.ImageReader):365:373 -> onImageAvailable
    154:154:void com.cubi.smartcameraengine.CameraThread.access$1400(com.cubi.smartcameraengine.CameraThread,android.media.Image):48:48 -> onImageAvailable
    154:154:void onImageAvailable(android.media.ImageReader):373 -> onImageAvailable
    155:163:void onImageAvailable(android.media.ImageReader):374:382 -> onImageAvailable
com.cubi.smartcameraengine.CameraThread$3$1 -> a.b.a.a$a:
    com.cubi.smartcameraengine.CameraThread$3 this$1 -> c
    int val$uvPixelStride -> b
    int val$uvRowStride -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread$3,int,int):349:349 -> <init>
    1:1:void run():352:352 -> run
    2:2:byte[][] com.cubi.smartcameraengine.CameraThread.access$900(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    2:2:void run():353 -> run
    3:5:void run():353:355 -> run
    6:6:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    6:6:void run():356 -> run
    7:7:void run():356:356 -> run
    8:8:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    8:8:void run():357 -> run
    9:9:void run():357:357 -> run
    10:10:int com.cubi.smartcameraengine.CameraThread.access$1000(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    10:10:void run():358 -> run
    11:11:void run():358:358 -> run
    12:12:int[] com.cubi.smartcameraengine.CameraThread.access$1300(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    12:12:void run():361 -> run
    13:13:void run():352:352 -> run
com.cubi.smartcameraengine.CameraThread$4 -> a.b.a.b:
    int val$requestedHeight -> b
    int val$requestedWidth -> a
    1:1:void <init>(int,int):400:400 -> <init>
    1:1:int diff(android.util.Size):403:403 -> a
    1:1:int compare(java.lang.Object,java.lang.Object):400:400 -> compare
    2:2:int compare(android.util.Size,android.util.Size):408:408 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):400 -> compare
com.cubi.smartcameraengine.CameraThread$5 -> com.cubi.smartcameraengine.CameraThread$c:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):604:604 -> <init>
    1:1:void run():608:608 -> run
    2:2:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    2:2:void run():608 -> run
    3:3:void run():608:608 -> run
    4:4:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    4:4:void run():608 -> run
    5:5:void run():608:608 -> run
    6:6:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1502(com.cubi.smartcameraengine.CameraThread,android.graphics.Bitmap):48:48 -> run
    6:6:void run():608 -> run
    7:7:void run():609:609 -> run
    8:8:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1500(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    8:8:void run():609 -> run
    9:9:int[] com.cubi.smartcameraengine.CameraThread.access$1300(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    9:9:void run():609 -> run
    10:10:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    10:10:void run():609 -> run
    11:11:void run():609:609 -> run
    12:12:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    12:12:void run():609 -> run
    13:13:void run():609:609 -> run
    14:14:android.util.Size com.cubi.smartcameraengine.CameraThread.access$1200(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    14:14:void run():609 -> run
    15:16:void run():609:610 -> run
    17:17:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1500(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    17:17:void run():610 -> run
    18:18:void run():610:610 -> run
    19:19:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1500(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    19:19:void run():610 -> run
    20:20:void run():610:610 -> run
    21:21:android.graphics.Matrix com.cubi.smartcameraengine.CameraThread.access$1700(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    21:21:void run():610 -> run
    22:22:void run():610:610 -> run
    23:23:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1602(com.cubi.smartcameraengine.CameraThread,android.graphics.Bitmap):48:48 -> run
    23:23:void run():610 -> run
    24:24:void run():611:611 -> run
    25:25:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1600(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    25:25:void run():611 -> run
    26:26:void run():611:611 -> run
com.cubi.smartcameraengine.CameraThread$6 -> com.cubi.smartcameraengine.CameraThread$d:
    long val$currTimestamp -> a
    com.cubi.smartcameraengine.CameraThread this$0 -> b
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread,long):650:650 -> <init>
    1:9:void run():654:662 -> run
    10:10:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1500(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    10:10:void run():662 -> run
    11:11:void run():662:662 -> run
    12:12:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1602(com.cubi.smartcameraengine.CameraThread,android.graphics.Bitmap):48:48 -> run
    12:12:void run():662 -> run
    13:13:void run():666:666 -> run
    14:14:com.cubi.smartcameraengine.objectdetection.Classifier com.cubi.smartcameraengine.CameraThread.access$1800(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    14:14:void run():666 -> run
    15:15:android.graphics.Bitmap com.cubi.smartcameraengine.CameraThread.access$1600(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    15:15:void run():666 -> run
    16:25:void run():666:675 -> run
    26:26:android.graphics.Matrix com.cubi.smartcameraengine.CameraThread.access$1900(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    26:26:void run():675 -> run
    27:32:void run():675:680 -> run
    33:33:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    33:33:void run():680 -> run
    34:40:void run():681:687 -> run
    41:41:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    41:41:void run():687 -> run
    42:42:void run():687:687 -> run
    43:43:void run():683:683 -> run
    44:44:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    44:44:void run():683 -> run
    45:55:void run():683:693 -> run
    56:56:com.cubi.smartcameraengine.objectdetection.OverlayView com.cubi.smartcameraengine.CameraThread.access$700(com.cubi.smartcameraengine.CameraThread):48:48 -> run
    56:56:void run():693 -> run
    57:58:void run():693:694 -> run
com.cubi.smartcameraengine.CameraThread$7 -> com.cubi.smartcameraengine.CameraThread$e:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):766:766 -> <init>
    1:1:void drawCallback(android.graphics.Canvas):769:769 -> drawCallback
    2:2:com.cubi.smartcameraengine.objectdetection.MultiBoxTracker com.cubi.smartcameraengine.CameraThread.access$600(com.cubi.smartcameraengine.CameraThread):48:48 -> drawCallback
    2:2:void drawCallback(android.graphics.Canvas):769 -> drawCallback
    3:3:void drawCallback(android.graphics.Canvas):770:770 -> drawCallback
com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener -> com.cubi.smartcameraengine.CameraThread$f:
com.cubi.smartcameraengine.LensFacing -> com.cubi.smartcameraengine.LensFacing:
    com.cubi.smartcameraengine.LensFacing[] $VALUES -> b
    int facing -> a
    1:2:void <clinit>():7:8 -> <clinit>
    3:3:void <clinit>():6:6 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):12:13 -> <init>
    1:1:int getFacing():17:17 -> getFacing
    1:1:com.cubi.smartcameraengine.LensFacing valueOf(java.lang.String):6:6 -> valueOf
    1:1:com.cubi.smartcameraengine.LensFacing[] values():6:6 -> values
com.cubi.smartcameraengine.Resolution -> com.cubi.smartcameraengine.Resolution:
    int height -> b
    int width -> a
    1:3:void <init>(int,int):10:12 -> <init>
    1:6:boolean equals(java.lang.Object):26:31 -> equals
    1:2:int hashCode():38:39 -> hashCode
    1:1:int height():20:20 -> height
    1:1:int width():16:16 -> width
com.cubi.smartcameraengine.capture.EGLBase -> com.cubi.smartcameraengine.capture.EGLBase:
    android.opengl.EGLContext defaultContext -> d
    android.opengl.EGLContext eglContext -> b
    android.opengl.EGLDisplay eglDisplay -> c
    android.opengl.EGLConfig eglConfig -> a
    1:1:void <init>(android.opengl.EGLContext,boolean,boolean):24:24 -> <init>
    2:5:void <init>(android.opengl.EGLContext,boolean,boolean):18:21 -> <init>
    6:22:void init(android.opengl.EGLContext,boolean,boolean):60:76 -> <init>
    6:22:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    23:58:android.opengl.EGLConfig getConfig(boolean,boolean):199:234 -> <init>
    23:58:void init(android.opengl.EGLContext,boolean,boolean):77 -> <init>
    23:58:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    59:60:void init(android.opengl.EGLContext,boolean,boolean):77:78 -> <init>
    59:60:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    61:65:android.opengl.EGLContext createContext(android.opengl.EGLContext):136:140 -> <init>
    61:65:void init(android.opengl.EGLContext,boolean,boolean):82 -> <init>
    61:65:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    66:66:void checkEglError(java.lang.String):192:192 -> <init>
    66:66:android.opengl.EGLContext createContext(android.opengl.EGLContext):141 -> <init>
    66:66:void init(android.opengl.EGLContext,boolean,boolean):82 -> <init>
    66:66:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    67:67:void init(android.opengl.EGLContext,boolean,boolean):82:82 -> <init>
    67:67:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    68:68:void checkEglError(java.lang.String):193:193 -> <init>
    68:68:android.opengl.EGLContext createContext(android.opengl.EGLContext):141 -> <init>
    68:68:void init(android.opengl.EGLContext,boolean,boolean):82 -> <init>
    68:68:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    69:78:void init(android.opengl.EGLContext,boolean,boolean):79:88 -> <init>
    69:78:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    79:80:void init(android.opengl.EGLContext,boolean,boolean):71:72 -> <init>
    79:80:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    81:81:void init(android.opengl.EGLContext,boolean,boolean):66:66 -> <init>
    81:81:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    82:82:void init(android.opengl.EGLContext,boolean,boolean):61:61 -> <init>
    82:82:void <init>(android.opengl.EGLContext,boolean,boolean):26 -> <init>
    1:2:com.cubi.smartcameraengine.capture.EglSurface createFromSurface(java.lang.Object):42:43 -> a
    3:5:int querySurface(android.opengl.EGLSurface,int):53:55 -> a
    6:7:void makeDefault():118:119 -> a
    8:13:void destroyWindowSurface(android.opengl.EGLSurface):181:186 -> a
    1:13:boolean makeCurrent(android.opengl.EGLSurface):98:110 -> b
    14:16:boolean makeCurrent(android.opengl.EGLSurface):102:104 -> b
    17:24:android.opengl.EGLSurface createWindowSurface(java.lang.Object):165:172 -> b
    1:2:int swap(android.opengl.EGLSurface):125:126 -> c
    1:1:android.opengl.EGLContext getContext():49:49 -> getContext
    1:1:void release():31:31 -> release
    2:12:void destroyContext():148:158 -> release
    2:12:void release():32 -> release
    13:17:void release():33:37 -> release
com.cubi.smartcameraengine.capture.EglSurface -> com.cubi.smartcameraengine.capture.EglSurface:
    android.opengl.EGLSurface eglSurface -> b
    int height -> d
    com.cubi.smartcameraengine.capture.EGLBase egl -> a
    int width -> c
    1:1:void <init>(com.cubi.smartcameraengine.capture.EGLBase,java.lang.Object):21:21 -> <init>
    2:15:void <init>(com.cubi.smartcameraengine.capture.EGLBase,java.lang.Object):18:31 -> <init>
    1:1:android.opengl.EGLContext getContext():44:44 -> getContext
    1:1:int getHeight():59:59 -> getHeight
    1:1:int getWidth():55:55 -> getWidth
    1:1:void makeCurrent():36:36 -> makeCurrent
    1:3:void release():49:51 -> release
    1:1:void swap():40:40 -> swap
com.cubi.smartcameraengine.capture.EncodeRenderHandler -> com.cubi.smartcameraengine.capture.EncodeRenderHandler:
    float XMatrixScale -> l
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject filterFramebufferObject -> r
    float aspectRatio -> k
    boolean recordNoFilter -> p
    float[] MVPMatrix -> i
    float[] STMatrix -> j
    java.lang.Object surface -> d
    int requestDraw -> h
    android.opengl.EGLContext sharedContext -> b
    com.cubi.smartcameraengine.egl.GlPreview previewShader -> v
    int texId -> e
    com.cubi.smartcameraengine.egl.filter.GlFilter normalFilter -> s
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> t
    boolean requestSetEglContext -> f
    boolean requestRelease -> g
    java.lang.Object sync -> a
    float fileHeight -> o
    boolean isRecordable -> c
    float fileWidth -> n
    float YMatrixScale -> m
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject framebufferObject -> q
    com.cubi.smartcameraengine.capture.EGLBase egl -> u
    1:1:void <init>(boolean,boolean,float,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):90:90 -> <init>
    2:87:void <init>(boolean,boolean,float,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):24:109 -> <init>
    1:20:com.cubi.smartcameraengine.capture.EncodeRenderHandler createHandler(java.lang.String,boolean,boolean,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):58:77 -> a
    21:37:void setEglContext(android.opengl.EGLContext,int,java.lang.Object):116:132 -> a
    38:61:void internalPrepare():253:276 -> a
    1:20:void internalRelease():280:299 -> b
    1:1:boolean isRecordFilter():304:304 -> c
    1:5:void prepareDraw():137:141 -> d
    1:15:void draw(int,float[],float[],float):146:160 -> draw
    1:10:void release():165:174 -> release
    1:56:void run():186:241 -> run
    57:67:void run():239:249 -> run
    68:68:void run():248:248 -> run
    69:69:void run():241:241 -> run
    70:70:void run():205:205 -> run
    71:71:void run():191:191 -> run
com.cubi.smartcameraengine.capture.MediaAudioEncoder -> com.cubi.smartcameraengine.capture.MediaAudioEncoder:
    com.cubi.smartcameraengine.capture.MediaAudioEncoder$AudioThread audioThread -> d
    int[] AUDIO_SOURCES -> e
    1:1:void <clinit>():82:82 -> <clinit>
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):31:31 -> <init>
    2:2:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):28:28 -> <init>
    1:3:void prepare():36:38 -> prepare
    4:18:android.media.MediaCodecInfo selectAudioCodec(java.lang.String):178:192 -> prepare
    4:18:void prepare():40 -> prepare
    19:38:void prepare():42:61 -> prepare
    1:2:void release():78:79 -> release
    1:5:void startRecording():68:72 -> startRecording
com.cubi.smartcameraengine.capture.MediaAudioEncoder$1 -> com.cubi.smartcameraengine.capture.MediaAudioEncoder$a:
com.cubi.smartcameraengine.capture.MediaAudioEncoder$AudioThread -> com.cubi.smartcameraengine.capture.MediaAudioEncoder$b:
    com.cubi.smartcameraengine.capture.MediaAudioEncoder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaAudioEncoder):94:94 -> <init>
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaAudioEncoder,com.cubi.smartcameraengine.capture.MediaAudioEncoder$1):94 -> <init>
    1:8:void run():98:105 -> run
    9:9:int[] com.cubi.smartcameraengine.capture.MediaAudioEncoder.access$100():18:18 -> run
    9:9:void run():108 -> run
    10:69:void run():108:167 -> run
com.cubi.smartcameraengine.capture.MediaEncoder -> com.cubi.smartcameraengine.capture.MediaEncoder:
    android.media.MediaCodec$BufferInfo bufferInfo -> a
    long prevPTUs -> b
    long prevResult -> c
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):73:73 -> <init>
    2:370:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):25:393 -> <init>
    371:383:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):76:88 -> <init>
    384:384:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):75:75 -> <init>
    385:385:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):74:74 -> <init>
    1:23:long getPTSUs():402:424 -> a
    1:10:void stopRecording():177:186 -> b
    11:17:void stopRecording():180:186 -> b
    1:41:void drain():302:342 -> drain
    42:90:void drain():326:374 -> drain
    91:102:void drain():369:380 -> drain
    103:103:void drain():353:353 -> drain
    1:21:void encode(java.nio.ByteBuffer,int,long):239:259 -> encode
    1:24:void encode1(java.nio.ByteBuffer,int,long):268:291 -> encode1
    1:7:boolean frameAvailableSoon():97:103 -> frameAvailableSoon
    8:12:boolean frameAvailableSoon():99:103 -> frameAvailableSoon
    1:26:void release():196:221 -> release
    1:35:void run():113:147 -> run
    36:45:void run():145:154 -> run
    46:46:void run():147:147 -> run
    47:47:void run():127:127 -> run
    48:48:void run():117:117 -> run
    1:4:void signalEndOfInputStream():226:229 -> signalEndOfInputStream
    1:6:void startRecording():165:170 -> startRecording
com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper -> com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper:
    com.cubi.smartcameraengine.capture.MediaEncoder audioEncoder -> f
    com.cubi.smartcameraengine.capture.MediaEncoder videoEncoder -> e
    int audioTrackIndex -> h
    long preventAudioPresentationTimeUs -> g
    android.media.MediaMuxer mediaMuxer -> a
    int encoderCount -> b
    int startedCount -> c
    boolean isStarted -> d
    1:1:void <init>(java.lang.String,int):26:26 -> <init>
    2:12:void <init>(java.lang.String,int):20:30 -> <init>
    1:4:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):76:79 -> a
    5:13:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):78:86 -> a
    14:17:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):82:85 -> a
    18:26:boolean start():95:103 -> a
    27:36:int addTrack(android.media.MediaFormat):128:137 -> a
    37:37:int addTrack(android.media.MediaFormat):129:129 -> a
    38:46:void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo):152:160 -> a
    1:7:void stop():111:117 -> b
    1:1:boolean isStarted():64:64 -> isStarted
    1:5:void prepare():35:39 -> prepare
    1:5:void startRecording():44:48 -> startRecording
    1:8:void stopRecording():53:60 -> stopRecording
com.cubi.smartcameraengine.capture.MediaVideoEncoder -> com.cubi.smartcameraengine.capture.MediaVideoEncoder:
    int bit_rate -> h
    com.cubi.smartcameraengine.capture.EncodeRenderHandler encodeRenderHandler -> f
    int fileWidth -> d
    android.view.Surface surface -> g
    int fileHeight -> e
    1:4:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener,int,int,boolean,boolean,com.cubi.smartcameraengine.CameraRecorder$Orientation,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):43:46 -> <init>
    1:2:void frameAvailableSoon(int,float[],float[],float):60:61 -> frameAvailableSoon
    3:4:boolean frameAvailableSoon():69:70 -> frameAvailableSoon
    1:3:void prepare():77:79 -> prepare
    4:21:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):149:166 -> prepare
    4:21:void prepare():81 -> prepare
    22:33:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):183:194 -> prepare
    22:33:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):167 -> prepare
    22:33:void prepare():81 -> prepare
    34:34:boolean isRecognizedViewoFormat(int):207:207 -> prepare
    34:34:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):195 -> prepare
    34:34:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):167 -> prepare
    34:34:void prepare():81 -> prepare
    35:35:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):202:202 -> prepare
    35:35:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):167 -> prepare
    35:35:void prepare():81 -> prepare
    36:37:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):190:191 -> prepare
    36:37:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):167 -> prepare
    36:37:void prepare():81 -> prepare
    38:44:void prepare():84:90 -> prepare
    45:46:int calcBitRate(int,int):136:137 -> prepare
    45:46:void prepare():91 -> prepare
    47:65:void prepare():91:109 -> prepare
    1:10:void release():120:129 -> release
    1:1:void setBitRate(int):212:212 -> setBitRate
    1:1:void setEglContext(android.opengl.EGLContext,int):115:115 -> setEglContext
    1:3:void signalEndOfInputStream():217:219 -> signalEndOfInputStream
com.cubi.smartcameraengine.egl.DefaultConfigChooser -> com.cubi.smartcameraengine.egl.DefaultConfigChooser:
    int depthSize -> f
    int stencilSize -> g
    int blueSize -> d
    int[] configSpec -> a
    int alphaSize -> e
    int redSize -> b
    int greenSize -> c
    1:1:void <init>(int):30:30 -> <init>
    2:2:void <init>(boolean,int):34:34 -> <init>
    3:4:void <init>(int,int,int,int,int,int,int):52:53 -> <init>
    5:10:int[] filterConfigSpec(int[],int):77:82 -> <init>
    5:10:void <init>(int,int,int,int,int,int,int):53 -> <init>
    11:25:void <init>(int,int,int,int,int,int,int):53:67 -> <init>
    1:3:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int):128:130 -> a
    1:11:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):90:100 -> chooseConfig
    12:20:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]):111:119 -> chooseConfig
    12:20:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):103 -> chooseConfig
    21:21:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):105:105 -> chooseConfig
    22:22:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):101:101 -> chooseConfig
    23:23:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):96:96 -> chooseConfig
    24:24:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):92:92 -> chooseConfig
com.cubi.smartcameraengine.egl.DefaultContextFactory -> com.cubi.smartcameraengine.egl.DefaultContextFactory:
    int EGLContextClientVersion -> a
    1:2:void <init>(int):21:22 -> <init>
    1:6:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig):30:35 -> createContext
    1:3:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext):40:42 -> destroyContext
com.cubi.smartcameraengine.egl.EglUtil -> com.cubi.smartcameraengine.egl.EglUtil:
    1:1:void <init>():26:26 -> <init>
    1:1:int createBuffer(float[]):73:73 -> createBuffer
    2:5:int createBuffer(java.nio.FloatBuffer):77:80 -> createBuffer
    1:14:int createProgram(int,int):47:60 -> createProgram
    15:15:int createProgram(int,int):49:49 -> createProgram
    1:7:int loadShader(java.lang.String,int):34:40 -> loadShader
    1:23:int loadTexture(android.graphics.Bitmap,int,boolean):99:121 -> loadTexture
    1:4:void setupSampler(int,int,int):66:69 -> setupSampler
    1:5:java.nio.FloatBuffer toFloatBuffer(float[]):84:88 -> toFloatBuffer
    1:3:void updateBufferData(int,java.nio.FloatBuffer):93:95 -> updateBufferData
com.cubi.smartcameraengine.egl.GLES20ConfigChooser -> com.cubi.smartcameraengine.egl.GLES20ConfigChooser:
    1:1:void <init>(boolean):8:8 -> <init>
com.cubi.smartcameraengine.egl.GLES20ContextFactory -> com.cubi.smartcameraengine.egl.GLES20ContextFactory:
    1:1:void <init>():9:9 -> <init>
com.cubi.smartcameraengine.egl.GLES20FramebufferObject -> com.cubi.smartcameraengine.egl.GLES20FramebufferObject:
    int renderBufferName -> d
    int texName -> e
    int height -> b
    int framebufferName -> c
    int width -> a
    1:1:void <init>():23:23 -> <init>
    1:1:void enable():115:115 -> enable
    1:1:int getHeight():35:35 -> getHeight
    1:1:int getTexName():39:39 -> getTexName
    1:1:int getWidth():31:31 -> getWidth
    1:10:void release():102:111 -> release
    1:56:void setup(int,int):43:98 -> setup
    57:61:void setup(int,int):89:93 -> setup
    62:62:void setup(int,int):52:52 -> setup
    63:63:void setup(int,int):47:47 -> setup
com.cubi.smartcameraengine.egl.GlFrameBufferObjectRenderer -> com.cubi.smartcameraengine.egl.GlFrameBufferObjectRenderer:
    java.util.Queue runOnDraw -> c
    com.cubi.smartcameraengine.egl.filter.GlFilter normalShader -> b
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject framebufferObject -> a
    1:2:void <init>():26:27 -> <init>
    1:13:void onDrawFrame(javax.microedition.khronos.opengles.GL10):49:61 -> onDrawFrame
    14:14:void onDrawFrame(javax.microedition.khronos.opengles.GL10):53:53 -> onDrawFrame
    1:4:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int):41:44 -> onSurfaceChanged
    1:4:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig):33:36 -> onSurfaceCreated
com.cubi.smartcameraengine.egl.GlPreview -> com.cubi.smartcameraengine.egl.GlPreview:
    int texTarget -> i
    1:4:java.lang.String createFragmentShaderSourceOESIfNeed(int):43:46 -> <init>
    1:4:void <init>(int):37 -> <init>
    5:6:void <init>(int):37:38 -> <init>
    1:22:void draw(int,float[],float[],float):62:83 -> draw
    1:6:void setup():53:58 -> setup
com.cubi.smartcameraengine.egl.GlPreviewRenderer -> com.cubi.smartcameraengine.egl.GlPreviewRenderer:
    com.cubi.smartcameraengine.egl.GlSurfaceTexture previewTexture -> e
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> o
    float[] STMatrix -> k
    boolean isNewShader -> p
    float[] MMatrix -> i
    float[] VMatrix -> j
    float[] MVPMatrix -> g
    float[] ProjMatrix -> h
    com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener surfaceCreateListener -> x
    int texName -> f
    android.opengl.GLSurfaceView glView -> l
    com.cubi.smartcameraengine.egl.GlPreview previewShader -> n
    android.os.Handler handler -> d
    com.cubi.smartcameraengine.Resolution cameraResolution -> u
    float gestureScale -> t
    int updateTexImageCounter -> v
    com.cubi.smartcameraengine.capture.MediaVideoEncoder videoEncoder -> y
    float drawScale -> s
    int updateTexImageCompare -> w
    float scaleRatio -> r
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject filterFramebufferObject -> m
    float aspectRatio -> q
    1:1:void <init>(android.opengl.GLSurfaceView):63:63 -> <init>
    2:46:void <init>(android.opengl.GLSurfaceView):27:71 -> <init>
    1:1:boolean access$102(com.cubi.smartcameraengine.egl.GlPreviewRenderer,boolean):25:25 -> a
    1:1:com.cubi.smartcameraengine.egl.filter.GlFilter getFilter():281:281 -> getFilter
    1:1:com.cubi.smartcameraengine.egl.GlSurfaceTexture getPreviewTexture():264:264 -> getPreviewTexture
    1:54:void onDrawFrame(com.cubi.smartcameraengine.egl.GLES20FramebufferObject):187:240 -> onDrawFrame
    55:55:void onDrawFrame(com.cubi.smartcameraengine.egl.GLES20FramebufferObject):206:206 -> onDrawFrame
    1:2:void onFrameAvailable(android.graphics.SurfaceTexture):121:122 -> onFrameAvailable
    1:25:void onStartPreview(float,float,com.cubi.smartcameraengine.CameraRecorder$Orientation):75:99 -> onStartPreview
    1:7:void onSurfaceChanged(int,int):175:181 -> onSurfaceChanged
    1:36:void onSurfaceCreated(javax.microedition.khronos.egl.EGLConfig):127:162 -> onSurfaceCreated
    1:1:void release():285:285 -> release
    1:1:void setAngle(int):272:272 -> setAngle
    2:2:void setAngle(int):270:270 -> setAngle
    1:1:void setCameraResolution(com.cubi.smartcameraengine.Resolution):245:245 -> setCameraResolution
    1:1:void setGestureScale(float):277:277 -> setGestureScale
    1:1:void setGlFilter(com.cubi.smartcameraengine.egl.filter.GlFilter):104:104 -> setGlFilter
    1:1:void setSurfaceCreateListener(com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener):300:300 -> setSurfaceCreateListener
    1:1:void setVideoEncoder(com.cubi.smartcameraengine.capture.MediaVideoEncoder):249:249 -> setVideoEncoder
com.cubi.smartcameraengine.egl.GlPreviewRenderer$1 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$a:
    com.cubi.smartcameraengine.egl.filter.GlFilter val$filter -> a
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> b
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.egl.filter.GlFilter):104:104 -> <init>
    1:1:void run():107:107 -> run
    2:2:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$000(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    2:2:void run():107 -> run
    3:5:void run():108:110 -> run
    6:6:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$002(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.egl.filter.GlFilter):25:25 -> run
    6:6:void run():110 -> run
    7:8:void run():111:112 -> run
    9:9:android.opengl.GLSurfaceView com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$200(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    9:9:void run():112 -> run
    10:10:void run():112:112 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$2 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$b:
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer):162:162 -> <init>
    1:1:void run():165:165 -> run
    2:2:com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$300(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    2:2:void run():165 -> run
    3:3:com.cubi.smartcameraengine.egl.GlSurfaceTexture com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$400(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    3:3:void run():166 -> run
    4:4:void run():166:166 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$3 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$c:
    com.cubi.smartcameraengine.capture.MediaVideoEncoder val$encoder -> a
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> b
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.capture.MediaVideoEncoder):249:249 -> <init>
    1:3:void run():252:254 -> run
    4:4:int com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$500(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    4:4:void run():254 -> run
    5:7:void run():254:256 -> run
    8:8:com.cubi.smartcameraengine.capture.MediaVideoEncoder com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$602(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.capture.MediaVideoEncoder):25:25 -> run
    8:8:void run():256 -> run
    9:9:void run():257:257 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$4 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$d:
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer):285:285 -> <init>
    1:1:void run():288:288 -> run
    2:2:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$000(com.cubi.smartcameraengine.egl.GlPreviewRenderer):25:25 -> run
    2:2:void run():288 -> run
    3:3:void run():289:289 -> run
com.cubi.smartcameraengine.egl.GlSurfaceTexture -> com.cubi.smartcameraengine.egl.GlSurfaceTexture:
    android.graphics.SurfaceTexture surfaceTexture -> a
    android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameAvailableListener -> b
    1:3:void <init>(int):11:13 -> <init>
    1:1:android.graphics.SurfaceTexture getSurfaceTexture():35:35 -> getSurfaceTexture
    1:1:void getTransformMatrix(float[]):31:31 -> getTransformMatrix
    1:2:void onFrameAvailable(android.graphics.SurfaceTexture):39:40 -> onFrameAvailable
    1:1:void release():45:45 -> release
    1:1:void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener):18:18 -> setOnFrameAvailableListener
    1:1:void updateTexImage():27:27 -> updateTexImage
com.cubi.smartcameraengine.egl.filter.GlBilateralFilter -> com.cubi.smartcameraengine.egl.filter.GlBilateralFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():113:113 -> <init>
    2:4:void <init>():108:110 -> <init>
    1:1:float getBlurSize():134:134 -> getBlurSize
    1:1:float getTexelHeightOffset():126:126 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():118:118 -> getTexelWidthOffset
    1:3:void onDraw():143:145 -> onDraw
    1:1:void setBlurSize(float):138:138 -> setBlurSize
    1:1:void setTexelHeightOffset(float):130:130 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):122:122 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlBoxBlurFilter -> com.cubi.smartcameraengine.egl.filter.GlBoxBlurFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():61:61 -> <init>
    2:4:void <init>():55:57 -> <init>
    1:1:float getBlurSize():81:81 -> getBlurSize
    1:1:float getTexelHeightOffset():73:73 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():65:65 -> getTexelWidthOffset
    1:3:void onDraw():91:93 -> onDraw
    1:1:void setBlurSize(float):85:85 -> setBlurSize
    1:1:void setTexelHeightOffset(float):77:77 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):69:69 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlBulgeDistortionFilter -> com.cubi.smartcameraengine.egl.filter.GlBulgeDistortionFilter:
    float scale -> l
    float radius -> k
    float centerY -> j
    float centerX -> i
    1:1:void <init>():38:38 -> <init>
    2:5:void <init>():32:35 -> <init>
    1:1:float getCenterX():42:42 -> getCenterX
    1:1:float getCenterY():50:50 -> getCenterY
    1:1:float getRadius():58:58 -> getRadius
    1:1:float getScale():66:66 -> getScale
    1:3:void onDraw():77:79 -> onDraw
    1:1:void setCenterX(float):46:46 -> setCenterX
    1:1:void setCenterY(float):54:54 -> setCenterY
    1:1:void setRadius(float):62:62 -> setRadius
    1:1:void setScale(float):70:70 -> setScale
com.cubi.smartcameraengine.egl.filter.GlCGAColorspaceFilter -> com.cubi.smartcameraengine.egl.filter.GlCGAColorspaceFilter:
    1:1:void <init>():50:50 -> <init>
com.cubi.smartcameraengine.egl.filter.GlFilter -> com.cubi.smartcameraengine.egl.filter.GlFilter:
    java.util.HashMap handleMap -> g
    float[] VERTICES_DATA -> h
    int vertexBufferName -> f
    java.lang.String vertexShaderSource -> a
    int vertexShader -> d
    int fragmentShader -> e
    java.lang.String fragmentShaderSource -> b
    int program -> c
    1:1:void <clinit>():46:46 -> <clinit>
    1:1:void <init>():74:74 -> <init>
    2:2:void <init>(android.content.res.Resources,int,int):78:78 -> <init>
    3:3:void <init>(java.lang.String,java.lang.String):81:81 -> <init>
    4:69:void <init>(java.lang.String,java.lang.String):18:83 -> <init>
    1:20:void draw(int,com.cubi.smartcameraengine.egl.GLES20FramebufferObject):126:145 -> draw
    1:13:int getHandle(java.lang.String):160:172 -> getHandle
    14:14:int getHandle(java.lang.String):170:170 -> getHandle
    1:1:java.lang.String getName():22:22 -> getName
    1:1:int getVertexBufferName():156:156 -> getVertexBufferName
    1:10:void release():108:117 -> release
    1:1:void setFragmentShaderSource(java.lang.String):99:99 -> setFragmentShaderSource
    1:1:void setShaderName(java.lang.String):26:26 -> setShaderName
    1:9:void setup():87:95 -> setup
    1:1:void useProgram():152:152 -> useProgram
com.cubi.smartcameraengine.egl.filter.GlFilterGroup -> com.cubi.smartcameraengine.egl.filter.GlFilterGroup:
    java.util.ArrayList list -> j
    int prevTexName -> k
    java.util.Collection filters -> i
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlFilter[]):23:23 -> <init>
    2:2:void <init>(java.util.Collection):26:26 -> <init>
    3:10:void <init>(java.util.Collection):20:27 -> <init>
    1:20:void draw(int,com.cubi.smartcameraengine.egl.GLES20FramebufferObject):84:103 -> draw
    1:10:void release():54:63 -> release
    1:8:void setFrameSize(int,int):68:75 -> setFrameSize
    1:15:void setup():32:46 -> setup
com.cubi.smartcameraengine.egl.filter.GlGaussianBlurFilter -> com.cubi.smartcameraengine.egl.filter.GlGaussianBlurFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():65:65 -> <init>
    2:4:void <init>():60:62 -> <init>
    1:1:float getBlurSize():85:85 -> getBlurSize
    1:1:float getTexelHeightOffset():77:77 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():69:69 -> getTexelWidthOffset
    1:3:void onDraw():95:97 -> onDraw
    1:1:void setBlurSize(float):89:89 -> setBlurSize
    1:1:void setTexelHeightOffset(float):81:81 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):73:73 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlGrayScaleFilter -> com.cubi.smartcameraengine.egl.filter.GlGrayScaleFilter:
    1:1:void <init>():17:17 -> <init>
com.cubi.smartcameraengine.egl.filter.GlHazeFilter -> com.cubi.smartcameraengine.egl.filter.GlHazeFilter:
    float slope -> j
    float distance -> i
    1:1:void <init>():29:29 -> <init>
    2:3:void <init>():25:26 -> <init>
    1:1:float getDistance():33:33 -> getDistance
    1:1:float getSlope():41:41 -> getSlope
    1:2:void onDraw():50:51 -> onDraw
    1:1:void setDistance(float):37:37 -> setDistance
    1:1:void setSlope(float):45:45 -> setSlope
com.cubi.smartcameraengine.egl.filter.GlInvertFilter -> com.cubi.smartcameraengine.egl.filter.GlInvertFilter:
    1:1:void <init>():15:15 -> <init>
com.cubi.smartcameraengine.egl.filter.GlLookUpTableFilter -> com.cubi.smartcameraengine.egl.filter.GlLookUpTableFilter:
    int hTex -> i
    android.graphics.Bitmap lutTexture -> j
    1:3:void <init>(android.graphics.Bitmap):43:45 -> <init>
    4:6:void <init>(android.content.res.Resources,int):50:52 -> <init>
    1:4:void onDraw():61:64 -> onDraw
    1:3:void releaseLutBitmap():80:82 -> releaseLutBitmap
    1:2:void reset():87:88 -> reset
    1:1:void setup():69:69 -> setup
    2:3:void loadTexture():74:75 -> setup
    2:3:void setup():70 -> setup
com.cubi.smartcameraengine.egl.filter.GlMonochromeFilter -> com.cubi.smartcameraengine.egl.filter.GlMonochromeFilter:
    float intensity -> i
    float[] filterColor -> j
    1:1:void <init>():39:39 -> <init>
    2:3:void <init>():35:36 -> <init>
    1:1:float getIntensity():43:43 -> getIntensity
    1:2:void onDraw():52:53 -> onDraw
    1:1:void setIntensity(float):47:47 -> setIntensity
com.cubi.smartcameraengine.egl.filter.GlOverlayFilter -> com.cubi.smartcameraengine.egl.filter.GlOverlayFilter:
    int[] textures -> i
    android.graphics.Bitmap bitmap -> j
    1:1:void <init>():19:19 -> <init>
    2:6:void <init>():12:16 -> <init>
    1:2:void createBitmap():45:46 -> a
    1:22:void onDraw():65:86 -> onDraw
    1:2:void releaseBitmap(android.graphics.Bitmap):92:93 -> releaseBitmap
    1:2:void setFrameSize(int,int):40:41 -> setFrameSize
    1:1:void setResolution(android.util.Size):35:35 -> setResolution
    1:10:void setup():51:60 -> setup
com.cubi.smartcameraengine.egl.filter.GlSepiaFilter -> com.cubi.smartcameraengine.egl.filter.GlSepiaFilter:
    1:1:void <init>():18:18 -> <init>
com.cubi.smartcameraengine.egl.filter.GlSharpenFilter -> com.cubi.smartcameraengine.egl.filter.GlSharpenFilter:
    float sharpness -> k
    float imageHeightFactor -> j
    float imageWidthFactor -> i
    1:1:void <init>():70:70 -> <init>
    2:4:void <init>():65:67 -> <init>
    1:1:float getSharpness():74:74 -> getSharpness
    1:3:void onDraw():90:92 -> onDraw
    1:2:void setFrameSize(int,int):84:85 -> setFrameSize
    1:1:void setSharpness(float):78:78 -> setSharpness
com.cubi.smartcameraengine.egl.filter.GlSphereRefractionFilter -> com.cubi.smartcameraengine.egl.filter.GlSphereRefractionFilter:
    float aspectRatio -> l
    float radius -> k
    float centerY -> j
    float centerX -> i
    float refractiveIndex -> m
    1:1:void <init>():40:40 -> <init>
    2:6:void <init>():33:37 -> <init>
    1:4:void onDraw():67:70 -> onDraw
    1:1:void setAspectRatio(float):56:56 -> setAspectRatio
    1:1:void setCenterX(float):44:44 -> setCenterX
    1:1:void setCenterY(float):48:48 -> setCenterY
    1:1:void setRadius(float):52:52 -> setRadius
    1:1:void setRefractiveIndex(float):60:60 -> setRefractiveIndex
com.cubi.smartcameraengine.egl.filter.GlThreex3TextureSamplingFilter -> com.cubi.smartcameraengine.egl.filter.GlThreex3TextureSamplingFilter:
    float texelHeight -> j
    float texelWidth -> i
    1:1:void <init>(java.lang.String):51:51 -> <init>
    1:1:float getTexelHeight():63:63 -> getTexelHeight
    1:1:float getTexelWidth():55:55 -> getTexelWidth
    1:2:void onDraw():78:79 -> onDraw
    1:2:void setFrameSize(int,int):72:73 -> setFrameSize
    1:1:void setTexelHeight(float):67:67 -> setTexelHeight
    1:1:void setTexelWidth(float):59:59 -> setTexelWidth
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter:
    java.util.ArrayList greenCurve -> o
    java.util.ArrayList redCurve -> n
    java.util.ArrayList rgbCompositeCurve -> m
    int[] textures -> r
    android.graphics.PointF[] rgbCompositeControlPoints -> i
    android.graphics.PointF[] redControlPoints -> j
    android.graphics.PointF[] greenControlPoints -> k
    android.graphics.PointF[] blueControlPoints -> l
    java.util.LinkedList runOnDraw -> q
    byte[] toneCurveByteArray -> s
    java.util.ArrayList blueCurve -> p
    1:1:void <init>(java.io.InputStream):52:52 -> <init>
    2:15:void <init>(java.io.InputStream):46:59 -> <init>
    16:48:void setFromCurveFileInputStream(java.io.InputStream):101:133 -> <init>
    16:48:void <init>(java.io.InputStream):61 -> <init>
    49:49:void <init>(java.io.InputStream):63:63 -> <init>
    50:52:void setRgbCompositeControlPoints(android.graphics.PointF[]):142:144 -> <init>
    50:52:void <init>(java.io.InputStream):63 -> <init>
    53:53:void <init>(java.io.InputStream):64:64 -> <init>
    54:56:void setRedControlPoints(android.graphics.PointF[]):148:150 -> <init>
    54:56:void <init>(java.io.InputStream):64 -> <init>
    57:57:void <init>(java.io.InputStream):65:65 -> <init>
    58:60:void setGreenControlPoints(android.graphics.PointF[]):154:156 -> <init>
    58:60:void <init>(java.io.InputStream):65 -> <init>
    61:61:void <init>(java.io.InputStream):66:66 -> <init>
    62:64:void setBlueControlPoints(android.graphics.PointF[]):160:162 -> <init>
    62:64:void <init>(java.io.InputStream):66 -> <init>
    1:1:short readShort(java.io.InputStream):138:138 -> a
    2:4:void runOnDraw(java.lang.Runnable):166:168 -> a
    5:5:void updateToneCurveTexture():172:172 -> a
    6:29:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):205:228 -> a
    30:78:java.util.ArrayList createSecondDerivative(android.graphics.Point[]):317:365 -> a
    30:78:java.util.ArrayList createSplineCurve2(android.graphics.Point[]):268 -> a
    30:78:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):231 -> a
    79:118:java.util.ArrayList createSplineCurve2(android.graphics.Point[]):272:311 -> a
    79:118:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):231 -> a
    119:145:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):235:261 -> a
    1:8:void onDraw():89:96 -> onDraw
    1:11:void setup():72:82 -> setup
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$1 -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$a:
    com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):172:172 -> <init>
    1:2:void run():175:176 -> run
    3:3:int[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$000(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    3:3:void run():176 -> run
    4:6:void run():176:178 -> run
    7:7:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$100(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    7:7:void run():178 -> run
    8:8:void run():178:178 -> run
    9:9:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$200(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    9:9:void run():178 -> run
    10:10:void run():178:178 -> run
    11:11:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$300(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    11:11:void run():178 -> run
    12:12:void run():178:178 -> run
    13:13:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    13:13:void run():178 -> run
    14:15:void run():178:179 -> run
    16:16:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$502(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter,byte[]) -> run
    16:16:void run():179 -> run
    17:17:void run():182:182 -> run
    18:18:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    18:18:void run():182 -> run
    19:19:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$300(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    19:19:void run():182 -> run
    20:20:void run():182:182 -> run
    21:21:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    21:21:void run():182 -> run
    22:23:void run():182:183 -> run
    24:24:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    24:24:void run():183 -> run
    25:25:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$200(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    25:25:void run():183 -> run
    26:26:void run():183:183 -> run
    27:27:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    27:27:void run():183 -> run
    28:29:void run():183:184 -> run
    30:30:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    30:30:void run():184 -> run
    31:31:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$100(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    31:31:void run():184 -> run
    32:32:void run():184:184 -> run
    33:33:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    33:33:void run():184 -> run
    34:35:void run():184:185 -> run
    36:36:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    36:36:void run():185 -> run
    37:40:void run():185:188 -> run
    41:41:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):16:16 -> run
    41:41:void run():188 -> run
    42:42:void run():188:188 -> run
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$2 -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$b:
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):211:211 -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):211:211 -> compare
    2:2:int compare(android.graphics.PointF,android.graphics.PointF):214:214 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):211 -> compare
com.cubi.smartcameraengine.egl.filter.GlToneFilter -> com.cubi.smartcameraengine.egl.filter.GlToneFilter:
    float quantizationLevels -> l
    float threshold -> k
    1:1:void <init>():56:56 -> <init>
    2:3:void <init>():51:52 -> <init>
    1:1:float getQuantizationLevels():70:70 -> getQuantizationLevels
    1:1:float getThreshold():62:62 -> getThreshold
    1:2:void onDraw():81:82 -> onDraw
    1:1:void setQuantizationLevels(float):74:74 -> setQuantizationLevels
    1:1:void setThreshold(float):66:66 -> setThreshold
com.cubi.smartcameraengine.egl.filter.GlVignetteFilter -> com.cubi.smartcameraengine.egl.filter.GlVignetteFilter:
    float vignetteStart -> l
    float vignetteCenterY -> j
    float[] vignetteColor -> k
    float vignetteCenterX -> i
    float vignetteEnd -> m
    1:1:void <init>():33:33 -> <init>
    2:6:void <init>():26:30 -> <init>
    1:1:float getVignetteEnd():46:46 -> getVignetteEnd
    1:1:float getVignetteStart():38:38 -> getVignetteStart
    1:4:void onDraw():57:60 -> onDraw
    1:1:void setVignetteEnd(float):50:50 -> setVignetteEnd
    1:1:void setVignetteStart(float):42:42 -> setVignetteStart
com.cubi.smartcameraengine.egl.filter.GlWeakPixelInclusionFilter -> com.cubi.smartcameraengine.egl.filter.GlWeakPixelInclusionFilter:
    1:1:void <init>():42:42 -> <init>
com.cubi.smartcameraengine.objectdetection.BorderedText -> com.cubi.smartcameraengine.objectdetection.BorderedText:
    android.graphics.Paint exteriorPaint -> b
    android.graphics.Paint interiorPaint -> a
    float textSize -> c
    1:1:void <init>(float):24:24 -> <init>
    2:18:void <init>(int,int,float):35:51 -> <init>
    1:2:void drawLines(android.graphics.Canvas,float,float,java.util.Vector):79:80 -> drawLines
    1:2:void drawText(android.graphics.Canvas,float,float,java.lang.String):60:61 -> drawText
    3:10:void drawText(android.graphics.Canvas,float,float,java.lang.String,android.graphics.Paint):67:74 -> drawText
    1:1:void getTextBounds(java.lang.String,int,int,android.graphics.Rect):104:104 -> getTextBounds
    1:1:float getTextSize():94:94 -> getTextSize
    1:2:void setAlpha(int):98:99 -> setAlpha
    1:1:void setExteriorColor(int):90:90 -> setExteriorColor
    1:1:void setInteriorColor(int):86:86 -> setInteriorColor
    1:2:void setTextAlign(android.graphics.Paint$Align):108:109 -> setTextAlign
    1:2:void setTypeface(android.graphics.Typeface):55:56 -> setTypeface
com.cubi.smartcameraengine.objectdetection.Classifier$Recognition -> com.cubi.smartcameraengine.objectdetection.Classifier$Recognition:
    android.graphics.RectF location -> d
    java.lang.String id -> a
    java.lang.Float confidence -> c
    java.lang.String title -> b
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.Float,android.graphics.RectF):57:61 -> <init>
    1:1:java.lang.Float getConfidence():73:73 -> getConfidence
    1:1:java.lang.String getId():65:65 -> getId
    1:1:android.graphics.RectF getLocation():77:77 -> getLocation
    1:1:java.lang.String getTitle():69:69 -> getTitle
    1:1:void setLocation(android.graphics.RectF):81:81 -> setLocation
    1:17:java.lang.String toString():87:103 -> toString
com.cubi.smartcameraengine.objectdetection.ImageUtils -> com.cubi.smartcameraengine.objectdetection.ImageUtils:
    1:1:void <init>():10:10 -> <init>
    int YUV2RGB(int,int,int) -> a
    1:7:void convertYUV420SPToARGB8888(byte[],int,int,int[]):81:87 -> convertYUV420SPToARGB8888
    1:1:void convertYUV420ToARGB8888(byte[],byte[],byte[],int,int,int,int,int,int[]):134:134 -> convertYUV420ToARGB8888
    1:40:android.graphics.Matrix getTransformationMatrix(int,int,int,int,int,boolean):160:199 -> getTransformationMatrix
    1:1:int getYUVByteSize(int,int):28:28 -> getYUVByteSize
    1:1:void saveBitmap(android.graphics.Bitmap,int):39:39 -> saveBitmap
    2:20:void saveBitmap(android.graphics.Bitmap,java.lang.String):49:67 -> saveBitmap
com.cubi.smartcameraengine.objectdetection.MultiBoxTracker -> com.cubi.smartcameraengine.objectdetection.MultiBoxTracker:
    java.util.List screenRects -> a
    int sensorOrientation -> j
    java.util.Queue availableColors -> b
    android.graphics.Paint boxPaint -> d
    int frameWidth -> h
    java.util.List trackedObjects -> c
    float textSizePx -> e
    android.graphics.Matrix frameToCanvasMatrix -> g
    int frameHeight -> i
    int[] COLORS -> k
    com.cubi.smartcameraengine.objectdetection.BorderedText borderedText -> f
    1:16:void <clinit>():26:41 -> <clinit>
    1:1:void <init>(android.content.Context):55:55 -> <init>
    2:28:void <init>(android.content.Context):43:69 -> <init>
    29:31:void <init>(android.content.Context):68:70 -> <init>
    1:1:android.graphics.Matrix getFrameToCanvasMatrix():104:104 -> a
    1:1:void clearRect():190:190 -> clearRect
    1:5:void draw(android.graphics.Canvas):108:112 -> draw
    6:18:void draw(android.graphics.Canvas):110:122 -> draw
    19:19:android.graphics.Matrix getFrameToCanvasMatrix():104:104 -> draw
    19:19:void draw(android.graphics.Canvas):124 -> draw
    20:32:void draw(android.graphics.Canvas):124:136 -> draw
    1:14:void drawDebug(android.graphics.Canvas):81:94 -> drawDebug
    1:3:void setFrameConfiguration(int,int,int):75:77 -> setFrameConfiguration
    1:42:void processResults(java.util.List):143:184 -> trackResults
    1:42:void trackResults(java.util.List,long):100 -> trackResults
com.cubi.smartcameraengine.objectdetection.MultiBoxTracker$1 -> com.cubi.smartcameraengine.objectdetection.MultiBoxTracker$a:
com.cubi.smartcameraengine.objectdetection.MultiBoxTracker$TrackedRecognition -> com.cubi.smartcameraengine.objectdetection.MultiBoxTracker$b:
    android.graphics.RectF location -> a
    float detectionConfidence -> b
    int color -> c
    java.lang.String title -> d
    1:1:void <init>():193:193 -> <init>
    2:2:void <init>():193:193 -> <init>
    2:2:void <init>(com.cubi.smartcameraengine.objectdetection.MultiBoxTracker$1):193 -> <init>
com.cubi.smartcameraengine.objectdetection.OverlayView -> com.cubi.smartcameraengine.objectdetection.OverlayView:
    java.util.List callbacks -> a
    1:1:void <init>(android.content.Context,android.util.AttributeSet):15:15 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):12:12 -> <init>
    1:1:void addCallback(com.cubi.smartcameraengine.objectdetection.OverlayView$DrawCallback):19:19 -> addCallback
    1:2:void draw(android.graphics.Canvas):24:25 -> draw
com.cubi.smartcameraengine.objectdetection.TFLiteObjectDetectionAPIModel -> com.cubi.smartcameraengine.objectdetection.TFLiteObjectDetectionAPIModel:
    java.util.Vector labels -> c
    float[][] outputClasses -> f
    float[][][] outputLocations -> e
    float[][] outputScores -> g
    java.nio.ByteBuffer imgData -> i
    int[] intValues -> d
    float[] numDetections -> h
    boolean isModelQuantized -> a
    int inputSize -> b
    org.tensorflow.lite.Interpreter tfLite -> j
    1:1:void <init>():65:65 -> <init>
    2:2:void <init>():46:46 -> <init>
    1:19:com.cubi.smartcameraengine.objectdetection.Classifier create(android.content.res.AssetManager,android.content.Context,java.lang.String,java.lang.String,int,boolean):106:124 -> create
    20:25:java.nio.MappedByteBuffer loadModelFile(android.content.Context,java.lang.String):80:85 -> create
    20:25:com.cubi.smartcameraengine.objectdetection.Classifier create(android.content.res.AssetManager,android.content.Context,java.lang.String,java.lang.String,int,boolean):124 -> create
    26:49:com.cubi.smartcameraengine.objectdetection.Classifier create(android.content.res.AssetManager,android.content.Context,java.lang.String,java.lang.String,int,boolean):124:147 -> create
    50:50:com.cubi.smartcameraengine.objectdetection.Classifier create(android.content.res.AssetManager,android.content.Context,java.lang.String,java.lang.String,int,boolean):127:127 -> create
    1:65:java.util.List recognizeImage(android.graphics.Bitmap):154:218 -> recognizeImage
    66:73:java.util.List recognizeImage(android.graphics.Bitmap):214:221 -> recognizeImage
    1:1:void setNumThreads(int):237:237 -> setNumThreads
    1:1:void setUseNNAPI(boolean):242:242 -> setUseNNAPI
