# compiler: R8
# compiler_version: 1.5.64
# pg_map_id: 34f947b
com.android.tools.r8.GeneratedOutlineSupport -> a.a.a.a.a:
    java.lang.StringBuilder outline0(java.lang.String) -> a
com.cubi.smartcameraengine.BuildConfig -> com.cubi.smartcameraengine.BuildConfig:
    1:1:void <init>():6:6 -> <init>
com.cubi.smartcameraengine.CameraHandler -> com.cubi.smartcameraengine.CameraHandler:
    float eventY -> d
    float eventX -> c
    com.cubi.smartcameraengine.CameraThread thread -> e
    int viewHeight -> b
    int viewWidth -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):30:30 -> <init>
    2:10:void <init>(com.cubi.smartcameraengine.CameraThread):23:31 -> <init>
    1:1:void startPreview(int,int):35:35 -> a
    2:12:void stopPreview(boolean):44:54 -> a
    13:17:void changeManualFocusPoint(float,float,int,int):58:62 -> a
    18:18:void changeAutoFocus():66:66 -> a
    19:19:void adjustBrightness(double):73:73 -> a
    1:1:void switchFlashMode():70:70 -> b
    1:44:void handleMessage(android.os.Message):80:123 -> handleMessage
    45:46:void handleMessage(android.os.Message):117:118 -> handleMessage
    47:48:void handleMessage(android.os.Message):112:113 -> handleMessage
    49:50:void handleMessage(android.os.Message):107:108 -> handleMessage
    51:68:void handleMessage(android.os.Message):87:104 -> handleMessage
    69:69:void handleMessage(android.os.Message):92:92 -> handleMessage
    70:71:void handleMessage(android.os.Message):82:83 -> handleMessage
com.cubi.smartcameraengine.CameraRecorder -> com.cubi.smartcameraengine.CameraRecorder:
    boolean flipHorizontal -> m
    boolean flipVertical -> n
    boolean mute -> o
    android.opengl.GLSurfaceView glSurfaceView -> e
    int cameraWidth -> j
    com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper muxer -> g
    int cameraHeight -> k
    int fileWidth -> h
    int fileHeight -> i
    com.cubi.smartcameraengine.CameraHandler cameraHandler -> d
    com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener mediaEncoderListener -> t
    boolean isLandscapeDevice -> q
    boolean recordNoFilter -> s
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> b
    boolean flashSupport -> f
    com.cubi.smartcameraengine.LensFacing lensFacing -> l
    com.cubi.smartcameraengine.egl.GlPreviewRenderer glPreviewRenderer -> a
    android.hardware.camera2.CameraManager cameraManager -> p
    int degrees -> r
    boolean started -> c
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,int,boolean):64:64 -> <init>
    2:180:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,int,boolean):27:205 -> <init>
    181:204:void <init>(com.cubi.smartcameraengine.CameraRecordListener,android.opengl.GLSurfaceView,int,int,int,int,com.cubi.smartcameraengine.LensFacing,boolean,boolean,boolean,android.hardware.camera2.CameraManager,boolean,int,boolean):67:90 -> <init>
    1:1:boolean access$202(com.cubi.smartcameraengine.CameraRecorder,boolean):21:21 -> a
    2:44:void startPreview(android.graphics.SurfaceTexture):100:142 -> a
    45:46:void notifyOnError(java.lang.Exception):343:344 -> a
    45:46:void access$1500(com.cubi.smartcameraengine.CameraRecorder,java.lang.Exception):21 -> a
    1:2:void adjustBrightness(double):175:176 -> adjustBrightness
    1:2:void changeAutoFocus():161:162 -> changeAutoFocus
    1:2:void changeManualFocusPoint(float,float,int,int):155:156 -> changeManualFocusPoint
    1:1:boolean isFlashSupport():187:187 -> isFlashSupport
    1:1:boolean isStarted():334:334 -> isStarted
    1:8:void release():319:326 -> release
    9:15:void destroyPreview():192:198 -> release
    9:15:void release():329 -> release
    1:1:void setFilter(com.cubi.smartcameraengine.egl.filter.GlFilter):148:148 -> setFilter
    1:2:void setGestureScale(float):181:182 -> setGestureScale
    1:42:void start(java.lang.String):232:273 -> start
    1:4:void stop():280:283 -> stop
    5:6:void notifyOnError(java.lang.Exception):343:344 -> stop
    5:6:void stop():307 -> stop
    7:11:void stop():308:312 -> stop
    1:3:void switchFlashMode():168:170 -> switchFlashMode
com.cubi.smartcameraengine.CameraRecorder$1 -> com.cubi.smartcameraengine.CameraRecorder$a:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):90:90 -> <init>
    1:1:void onCreated(android.graphics.SurfaceTexture):93:93 -> onCreated
    2:2:void com.cubi.smartcameraengine.CameraRecorder.access$000(com.cubi.smartcameraengine.CameraRecorder,android.graphics.SurfaceTexture):21:21 -> onCreated
    2:2:void onCreated(android.graphics.SurfaceTexture):93 -> onCreated
com.cubi.smartcameraengine.CameraRecorder$2 -> com.cubi.smartcameraengine.CameraRecorder$b:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):101:101 -> <init>
    1:2:void onStart(android.util.Size,boolean):105:106 -> a
    3:3:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> a
    3:3:void onStart(android.util.Size,boolean):106 -> a
    4:8:void onStart(android.util.Size,boolean):107:111 -> a
    9:9:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):21:21 -> a
    9:9:void onStart(android.util.Size,boolean):111 -> a
    10:10:boolean com.cubi.smartcameraengine.CameraRecorder.access$200(com.cubi.smartcameraengine.CameraRecorder):21:21 -> a
    10:10:void onStart(android.util.Size,boolean):112 -> a
    11:17:void onStart(android.util.Size,boolean):112:118 -> a
    18:18:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):21:21 -> a
    18:18:void onStart(android.util.Size,boolean):118 -> a
    19:34:void onStart(android.util.Size,boolean):118:133 -> a
    35:35:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> a
    35:35:void onStart(android.util.Size,boolean):133 -> a
    36:37:void onStart(android.util.Size,boolean):134:135 -> a
com.cubi.smartcameraengine.CameraRecorder$2$1 -> com.cubi.smartcameraengine.CameraRecorder$b$a:
    com.cubi.smartcameraengine.CameraRecorder$2 this$1 -> c
    float val$previewHeight -> b
    float val$previewWidth -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder$2,float,float):118:118 -> <init>
    1:1:void run():121:121 -> run
    2:2:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    2:2:void run():121 -> run
    3:3:int com.cubi.smartcameraengine.CameraRecorder.access$400(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    3:3:void run():122 -> run
    4:5:void run():122:123 -> run
    6:6:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    6:6:void run():123 -> run
    7:7:void run():123:123 -> run
    8:8:boolean com.cubi.smartcameraengine.CameraRecorder.access$500(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    8:8:void run():123 -> run
    9:9:void run():123:123 -> run
com.cubi.smartcameraengine.CameraRecorder$3 -> com.cubi.smartcameraengine.CameraRecorder$c:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):205:205 -> <init>
    1:3:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):208:210 -> onPrepared
    4:4:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> onPrepared
    4:4:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):210 -> onPrepared
    5:5:void onPrepared(com.cubi.smartcameraengine.capture.MediaEncoder):211:211 -> onPrepared
    1:3:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):219:221 -> onStopped
    4:4:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> onStopped
    4:4:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):221 -> onStopped
    5:5:void onStopped(com.cubi.smartcameraengine.capture.MediaEncoder):222:222 -> onStopped
com.cubi.smartcameraengine.CameraRecorder$4 -> com.cubi.smartcameraengine.CameraRecorder$d:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> b
    java.lang.String val$filePath -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder,java.lang.String):235:235 -> <init>
    1:1:void run():239:239 -> run
    2:2:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$702(com.cubi.smartcameraengine.CameraRecorder,com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper):21:21 -> run
    2:2:void run():239 -> run
    3:3:void run():244:244 -> run
    4:4:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    4:4:void run():245 -> run
    5:5:void run():245:245 -> run
    6:6:com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener com.cubi.smartcameraengine.CameraRecorder.access$800(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    6:6:void run():246 -> run
    7:7:void run():246:246 -> run
    8:8:int com.cubi.smartcameraengine.CameraRecorder.access$900(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    8:8:void run():247 -> run
    9:9:void run():247:247 -> run
    10:10:int com.cubi.smartcameraengine.CameraRecorder.access$1000(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    10:10:void run():248 -> run
    11:11:void run():248:248 -> run
    12:12:boolean com.cubi.smartcameraengine.CameraRecorder.access$1100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    12:12:void run():249 -> run
    13:13:void run():249:249 -> run
    14:14:boolean com.cubi.smartcameraengine.CameraRecorder.access$1200(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    14:14:void run():250 -> run
    15:15:void run():250:250 -> run
    16:16:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    16:16:void run():251 -> run
    17:17:void run():251:251 -> run
    18:18:android.opengl.GLSurfaceView com.cubi.smartcameraengine.CameraRecorder.access$600(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    18:18:void run():252 -> run
    19:19:void run():252:252 -> run
    20:20:boolean com.cubi.smartcameraengine.CameraRecorder.access$1300(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    20:20:void run():253 -> run
    21:21:void run():253:253 -> run
    22:22:com.cubi.smartcameraengine.egl.GlPreviewRenderer com.cubi.smartcameraengine.CameraRecorder.access$100(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    22:22:void run():254 -> run
    23:25:void run():254:256 -> run
    26:26:boolean com.cubi.smartcameraengine.CameraRecorder.access$1400(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    26:26:void run():256 -> run
    27:27:void run():258:258 -> run
    28:28:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    28:28:void run():258 -> run
    29:29:void run():258:258 -> run
    30:30:com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener com.cubi.smartcameraengine.CameraRecorder.access$800(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    30:30:void run():258 -> run
    31:33:void run():258:260 -> run
    34:34:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    34:34:void run():260 -> run
    35:36:void run():260:261 -> run
    37:37:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    37:37:void run():261 -> run
    38:40:void run():261:263 -> run
    41:41:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    41:41:void run():263 -> run
    42:42:void run():264:264 -> run
    43:43:com.cubi.smartcameraengine.CameraRecordListener com.cubi.smartcameraengine.CameraRecorder.access$300(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    43:43:void run():264 -> run
    44:47:void run():264:267 -> run
com.cubi.smartcameraengine.CameraRecorder$5 -> com.cubi.smartcameraengine.CameraRecorder$e:
    com.cubi.smartcameraengine.CameraRecorder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecorder):283:283 -> <init>
    1:1:void run():289:289 -> run
    2:2:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    2:2:void run():289 -> run
    3:3:void run():290:290 -> run
    4:4:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$700(com.cubi.smartcameraengine.CameraRecorder):21:21 -> run
    4:4:void run():290 -> run
    5:6:void run():290:291 -> run
    7:7:com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper com.cubi.smartcameraengine.CameraRecorder.access$702(com.cubi.smartcameraengine.CameraRecorder,com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper):21:21 -> run
    7:7:void run():291 -> run
    8:13:void run():297:302 -> run
    14:15:void com.cubi.smartcameraengine.CameraRecorder.notifyOnDone():338:339 -> run
    14:15:void com.cubi.smartcameraengine.CameraRecorder.access$1600(com.cubi.smartcameraengine.CameraRecorder):21 -> run
    14:15:void run():302 -> run
com.cubi.smartcameraengine.CameraRecorderBuilder -> com.cubi.smartcameraengine.CameraRecorderBuilder:
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> n
    int cameraWidth -> l
    int cameraHeight -> m
    boolean flipHorizontal -> i
    boolean mute -> j
    boolean recordNoFilter -> k
    android.opengl.GLSurfaceView glSurfaceView -> a
    int fileWidth -> f
    int fileHeight -> g
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> e
    android.app.Activity activity -> d
    com.cubi.smartcameraengine.LensFacing lensFacing -> b
    boolean flipVertical -> h
    android.content.res.Resources resources -> c
    1:1:void <init>(android.app.Activity,android.opengl.GLSurfaceView):37:37 -> <init>
    2:19:void <init>(android.app.Activity,android.opengl.GLSurfaceView):23:40 -> <init>
    1:34:com.cubi.smartcameraengine.CameraRecorder build():91:124 -> build
    35:35:com.cubi.smartcameraengine.CameraRecorder build():92:92 -> build
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder cameraRecordListener(com.cubi.smartcameraengine.CameraRecordListener):44:44 -> cameraRecordListener
    1:2:com.cubi.smartcameraengine.CameraRecorderBuilder cameraSize(int,int):60:61 -> cameraSize
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder filter(com.cubi.smartcameraengine.egl.filter.GlFilter):49:49 -> filter
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder flipHorizontal(boolean):71:71 -> flipHorizontal
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder flipVertical(boolean):76:76 -> flipVertical
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder lensFacing(com.cubi.smartcameraengine.LensFacing):66:66 -> lensFacing
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder mute(boolean):81:81 -> mute
    1:1:com.cubi.smartcameraengine.CameraRecorderBuilder recordNoFilter(boolean):86:86 -> recordNoFilter
    1:2:com.cubi.smartcameraengine.CameraRecorderBuilder videoSize(int,int):54:55 -> videoSize
com.cubi.smartcameraengine.CameraThread -> com.cubi.smartcameraengine.CameraThread:
    boolean isFlashTorch -> m
    boolean flashSupport -> o
    android.hardware.camera2.CaptureRequest$Builder requestBuilder -> e
    android.hardware.camera2.CameraDevice cameraDevice -> d
    com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener listener -> i
    android.hardware.camera2.CameraCaptureSession$StateCallback cameraCaptureSessionCallback -> s
    com.cubi.smartcameraengine.CameraRecordListener cameraRecordListener -> j
    android.graphics.Rect sensorArraySize -> g
    java.lang.String mCameraId -> p
    com.cubi.smartcameraengine.CameraHandler handler -> b
    android.util.Size cameraSize -> l
    com.cubi.smartcameraengine.LensFacing lensFacing -> n
    android.graphics.SurfaceTexture surfaceTexture -> h
    android.hardware.camera2.CameraManager cameraManager -> k
    java.lang.Object readyFence -> a
    android.hardware.camera2.CameraCaptureSession cameraCaptureSession -> f
    android.hardware.camera2.CameraDevice$StateCallback cameraDeviceCallback -> r
    boolean isRunning -> c
    android.graphics.Rect arraySize -> q
    1:1:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):70:70 -> <init>
    2:76:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):39:113 -> <init>
    77:81:void <init>(com.cubi.smartcameraengine.CameraRecordListener,com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener,android.graphics.SurfaceTexture,android.hardware.camera2.CameraManager,com.cubi.smartcameraengine.LensFacing):71:75 -> <init>
    1:26:void startPreview(int,int):186:211 -> a
    27:27:android.util.Size getClosestSupportedSize(java.util.List,int,int):252:252 -> a
    27:27:void startPreview(int,int):211 -> a
    28:28:void startPreview(int,int):211:211 -> a
    29:45:void startPreview(int,int):209:225 -> a
    46:70:void changeManualFocusPoint(float,float,int,int):322:346 -> a
    71:78:void changeAutoFocus():372:379 -> a
    1:10:void stopPreview():270:279 -> b
    1:14:void switchFlashMode():354:367 -> c
    1:8:com.cubi.smartcameraengine.CameraHandler getHandler():80:87 -> getHandler
    9:9:com.cubi.smartcameraengine.CameraHandler getHandler():86:86 -> getHandler
    1:16:void run():160:175 -> run
    17:17:void run():166:166 -> run
    1:21:void setExposure(double):289:309 -> setExposure
com.cubi.smartcameraengine.CameraThread$1 -> com.cubi.smartcameraengine.CameraThread$a:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):90:90 -> <init>
    1:3:void onDisconnected(android.hardware.camera2.CameraDevice):100:102 -> onDisconnected
    4:4:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):32:32 -> onDisconnected
    4:4:void onDisconnected(android.hardware.camera2.CameraDevice):102 -> onDisconnected
    1:3:void onError(android.hardware.camera2.CameraDevice,int):107:109 -> onError
    4:4:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):32:32 -> onError
    4:4:void onError(android.hardware.camera2.CameraDevice,int):109 -> onError
    1:2:void onOpened(android.hardware.camera2.CameraDevice):93:94 -> onOpened
    3:3:android.hardware.camera2.CameraDevice com.cubi.smartcameraengine.CameraThread.access$002(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraDevice):32:32 -> onOpened
    3:3:void onOpened(android.hardware.camera2.CameraDevice):94 -> onOpened
    4:20:void com.cubi.smartcameraengine.CameraThread.createCaptureSession():231:247 -> onOpened
    4:20:void com.cubi.smartcameraengine.CameraThread.access$100(com.cubi.smartcameraengine.CameraThread):32 -> onOpened
    4:20:void onOpened(android.hardware.camera2.CameraDevice):95 -> onOpened
com.cubi.smartcameraengine.CameraThread$2 -> com.cubi.smartcameraengine.CameraThread$b:
    com.cubi.smartcameraengine.CameraThread this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.CameraThread):113:113 -> <init>
    1:1:void onConfigured(android.hardware.camera2.CameraCaptureSession):116:116 -> onConfigured
    2:2:android.hardware.camera2.CameraCaptureSession com.cubi.smartcameraengine.CameraThread.access$202(com.cubi.smartcameraengine.CameraThread,android.hardware.camera2.CameraCaptureSession):32:32 -> onConfigured
    2:2:void onConfigured(android.hardware.camera2.CameraCaptureSession):116 -> onConfigured
    3:15:void com.cubi.smartcameraengine.CameraThread.updatePreview():136:148 -> onConfigured
    3:15:void com.cubi.smartcameraengine.CameraThread.access$300(com.cubi.smartcameraengine.CameraThread):32 -> onConfigured
    3:15:void onConfigured(android.hardware.camera2.CameraCaptureSession):117 -> onConfigured
com.cubi.smartcameraengine.CameraThread$3 -> a.b.a.a:
    int val$requestedHeight -> b
    int val$requestedWidth -> a
    1:1:void <init>(int,int):252:252 -> <init>
    1:1:int diff(android.util.Size):255:255 -> a
    1:1:int compare(java.lang.Object,java.lang.Object):252:252 -> compare
    2:2:int compare(android.util.Size,android.util.Size):260:260 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):252 -> compare
com.cubi.smartcameraengine.CameraThread$OnStartPreviewListener -> com.cubi.smartcameraengine.CameraThread$c:
com.cubi.smartcameraengine.LensFacing -> com.cubi.smartcameraengine.LensFacing:
    com.cubi.smartcameraengine.LensFacing[] $VALUES -> b
    int facing -> a
    1:2:void <clinit>():10:11 -> <clinit>
    3:3:void <clinit>():9:9 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):15:16 -> <init>
    1:1:int getFacing():20:20 -> getFacing
    1:1:com.cubi.smartcameraengine.LensFacing valueOf(java.lang.String):9:9 -> valueOf
    1:1:com.cubi.smartcameraengine.LensFacing[] values():9:9 -> values
com.cubi.smartcameraengine.Resolution -> com.cubi.smartcameraengine.Resolution:
    int height -> b
    int width -> a
    1:3:void <init>(int,int):13:15 -> <init>
    1:6:boolean equals(java.lang.Object):29:34 -> equals
    1:2:int hashCode():41:42 -> hashCode
    1:1:int height():23:23 -> height
    1:1:int width():19:19 -> width
com.cubi.smartcameraengine.capture.EGLBase -> com.cubi.smartcameraengine.capture.EGLBase:
    android.opengl.EGLContext defaultContext -> d
    android.opengl.EGLContext eglContext -> b
    android.opengl.EGLDisplay eglDisplay -> c
    android.opengl.EGLConfig eglConfig -> a
    1:1:void <init>(android.opengl.EGLContext,boolean,boolean):27:27 -> <init>
    2:5:void <init>(android.opengl.EGLContext,boolean,boolean):21:24 -> <init>
    6:22:void init(android.opengl.EGLContext,boolean,boolean):63:79 -> <init>
    6:22:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    23:58:android.opengl.EGLConfig getConfig(boolean,boolean):202:237 -> <init>
    23:58:void init(android.opengl.EGLContext,boolean,boolean):80 -> <init>
    23:58:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    59:60:void init(android.opengl.EGLContext,boolean,boolean):80:81 -> <init>
    59:60:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    61:65:android.opengl.EGLContext createContext(android.opengl.EGLContext):139:143 -> <init>
    61:65:void init(android.opengl.EGLContext,boolean,boolean):85 -> <init>
    61:65:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    66:66:void checkEglError(java.lang.String):195:195 -> <init>
    66:66:android.opengl.EGLContext createContext(android.opengl.EGLContext):144 -> <init>
    66:66:void init(android.opengl.EGLContext,boolean,boolean):85 -> <init>
    66:66:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    67:67:void init(android.opengl.EGLContext,boolean,boolean):85:85 -> <init>
    67:67:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    68:68:void checkEglError(java.lang.String):196:196 -> <init>
    68:68:android.opengl.EGLContext createContext(android.opengl.EGLContext):144 -> <init>
    68:68:void init(android.opengl.EGLContext,boolean,boolean):85 -> <init>
    68:68:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    69:78:void init(android.opengl.EGLContext,boolean,boolean):82:91 -> <init>
    69:78:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    79:80:void init(android.opengl.EGLContext,boolean,boolean):74:75 -> <init>
    79:80:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    81:81:void init(android.opengl.EGLContext,boolean,boolean):69:69 -> <init>
    81:81:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    82:82:void init(android.opengl.EGLContext,boolean,boolean):64:64 -> <init>
    82:82:void <init>(android.opengl.EGLContext,boolean,boolean):29 -> <init>
    1:2:com.cubi.smartcameraengine.capture.EglSurface createFromSurface(java.lang.Object):45:46 -> a
    3:5:int querySurface(android.opengl.EGLSurface,int):56:58 -> a
    6:7:void makeDefault():121:122 -> a
    8:13:void destroyWindowSurface(android.opengl.EGLSurface):184:189 -> a
    1:13:boolean makeCurrent(android.opengl.EGLSurface):101:113 -> b
    14:16:boolean makeCurrent(android.opengl.EGLSurface):105:107 -> b
    17:24:android.opengl.EGLSurface createWindowSurface(java.lang.Object):168:175 -> b
    1:2:int swap(android.opengl.EGLSurface):128:129 -> c
    1:1:android.opengl.EGLContext getContext():52:52 -> getContext
    1:1:void release():34:34 -> release
    2:12:void destroyContext():151:161 -> release
    2:12:void release():35 -> release
    13:17:void release():36:40 -> release
com.cubi.smartcameraengine.capture.EglSurface -> com.cubi.smartcameraengine.capture.EglSurface:
    android.opengl.EGLSurface eglSurface -> b
    int height -> d
    com.cubi.smartcameraengine.capture.EGLBase egl -> a
    int width -> c
    1:1:void <init>(com.cubi.smartcameraengine.capture.EGLBase,java.lang.Object):25:25 -> <init>
    2:15:void <init>(com.cubi.smartcameraengine.capture.EGLBase,java.lang.Object):22:35 -> <init>
    1:1:android.opengl.EGLContext getContext():48:48 -> getContext
    1:1:int getHeight():63:63 -> getHeight
    1:1:int getWidth():59:59 -> getWidth
    1:1:void makeCurrent():40:40 -> makeCurrent
    1:3:void release():53:55 -> release
    1:1:void swap():44:44 -> swap
com.cubi.smartcameraengine.capture.EncodeRenderHandler -> com.cubi.smartcameraengine.capture.EncodeRenderHandler:
    float XMatrixScale -> l
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject filterFramebufferObject -> r
    float aspectRatio -> k
    boolean recordNoFilter -> p
    float[] MVPMatrix -> i
    float[] STMatrix -> j
    java.lang.Object surface -> d
    int requestDraw -> h
    com.cubi.smartcameraengine.egl.GlPreview previewShader -> w
    android.opengl.EGLContext sharedContext -> b
    int texId -> e
    com.cubi.smartcameraengine.egl.filter.GlFilter normalFilter -> s
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> t
    boolean requestSetEglContext -> f
    boolean requestRelease -> g
    com.cubi.smartcameraengine.capture.EglSurface inputSurface -> v
    java.lang.Object sync -> a
    float fileHeight -> o
    boolean isRecordable -> c
    float fileWidth -> n
    float YMatrixScale -> m
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject framebufferObject -> q
    com.cubi.smartcameraengine.capture.EGLBase egl -> u
    1:1:void <init>(boolean,boolean,float,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):93:93 -> <init>
    2:87:void <init>(boolean,boolean,float,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):27:112 -> <init>
    1:20:com.cubi.smartcameraengine.capture.EncodeRenderHandler createHandler(java.lang.String,boolean,boolean,float,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):61:80 -> a
    21:37:void setEglContext(android.opengl.EGLContext,int,java.lang.Object):119:135 -> a
    38:61:void internalPrepare():256:279 -> a
    1:20:void internalRelease():283:302 -> b
    1:1:boolean isRecordFilter():307:307 -> c
    1:5:void prepareDraw():140:144 -> d
    1:15:void draw(int,float[],float[],float):149:163 -> draw
    1:10:void release():168:177 -> release
    1:56:void run():189:244 -> run
    57:67:void run():242:252 -> run
    68:68:void run():251:251 -> run
    69:69:void run():244:244 -> run
    70:70:void run():208:208 -> run
    71:71:void run():194:194 -> run
com.cubi.smartcameraengine.capture.MediaAudioEncoder -> com.cubi.smartcameraengine.capture.MediaAudioEncoder:
    com.cubi.smartcameraengine.capture.MediaAudioEncoder$AudioThread audioThread -> d
    int[] AUDIO_SOURCES -> e
    1:1:void <clinit>():85:85 -> <clinit>
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):34:34 -> <init>
    2:2:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):31:31 -> <init>
    1:3:void prepare():39:41 -> prepare
    4:18:android.media.MediaCodecInfo selectAudioCodec(java.lang.String):199:213 -> prepare
    4:18:void prepare():43 -> prepare
    19:38:void prepare():45:64 -> prepare
    1:2:void release():81:82 -> release
    1:5:void startRecording():71:75 -> startRecording
com.cubi.smartcameraengine.capture.MediaAudioEncoder$1 -> com.cubi.smartcameraengine.capture.MediaAudioEncoder$a:
com.cubi.smartcameraengine.capture.MediaAudioEncoder$AudioThread -> com.cubi.smartcameraengine.capture.MediaAudioEncoder$b:
    com.cubi.smartcameraengine.capture.MediaAudioEncoder this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaAudioEncoder):97:97 -> <init>
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaAudioEncoder,com.cubi.smartcameraengine.capture.MediaAudioEncoder$1):97 -> <init>
    1:8:void run():101:108 -> run
    9:9:int[] com.cubi.smartcameraengine.capture.MediaAudioEncoder.access$100():21:21 -> run
    9:9:void run():111 -> run
    10:87:void run():111:188 -> run
com.cubi.smartcameraengine.capture.MediaEncoder -> com.cubi.smartcameraengine.capture.MediaEncoder:
    android.media.MediaCodec$BufferInfo bufferInfo -> a
    long prevPTUs -> b
    long prevResult -> c
    1:1:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):72:72 -> <init>
    2:378:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):28:404 -> <init>
    379:391:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):75:87 -> <init>
    392:392:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):74:74 -> <init>
    393:393:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener):73:73 -> <init>
    1:45:void drain():302:346 -> a
    46:99:void drain():330:383 -> a
    100:118:void drain():372:390 -> a
    119:119:void drain():356:356 -> a
    1:23:long getPTSUs():413:435 -> b
    1:10:void stopRecording():176:185 -> c
    11:17:void stopRecording():179:185 -> c
    1:21:void encode(java.nio.ByteBuffer,int,long):239:259 -> encode
    1:22:void encode1(java.nio.ByteBuffer,int,long):268:289 -> encode1
    1:7:boolean frameAvailableSoon():96:102 -> frameAvailableSoon
    8:12:boolean frameAvailableSoon():98:102 -> frameAvailableSoon
    1:27:void release():195:221 -> release
    1:35:void run():112:146 -> run
    36:45:void run():144:153 -> run
    46:46:void run():146:146 -> run
    47:47:void run():126:126 -> run
    48:48:void run():116:116 -> run
    1:5:void signalEndOfInputStream():225:229 -> signalEndOfInputStream
    1:6:void startRecording():164:169 -> startRecording
com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper -> com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper:
    com.cubi.smartcameraengine.capture.MediaEncoder audioEncoder -> f
    com.cubi.smartcameraengine.capture.MediaEncoder videoEncoder -> e
    int audioTrackIndex -> h
    long preventAudioPresentationTimeUs -> g
    android.media.MediaMuxer mediaMuxer -> a
    int encoderCount -> b
    int startedCount -> c
    boolean isStarted -> d
    1:1:void <init>(java.lang.String):29:29 -> <init>
    2:11:void <init>(java.lang.String):23:32 -> <init>
    1:4:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):78:81 -> a
    5:13:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):80:88 -> a
    14:17:void addEncoder(com.cubi.smartcameraengine.capture.MediaEncoder):84:87 -> a
    18:26:boolean start():97:105 -> a
    27:36:int addTrack(android.media.MediaFormat):130:139 -> a
    37:37:int addTrack(android.media.MediaFormat):131:131 -> a
    38:46:void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo):154:162 -> a
    1:7:void stop():113:119 -> b
    1:1:boolean isStarted():66:66 -> isStarted
    1:5:void prepare():37:41 -> prepare
    1:5:void startRecording():46:50 -> startRecording
    1:8:void stopRecording():55:62 -> stopRecording
com.cubi.smartcameraengine.capture.MediaVideoEncoder -> com.cubi.smartcameraengine.capture.MediaVideoEncoder:
    com.cubi.smartcameraengine.capture.EncodeRenderHandler encodeRenderHandler -> f
    int fileWidth -> d
    android.view.Surface surface -> g
    int fileHeight -> e
    1:4:void <init>(com.cubi.smartcameraengine.capture.MediaMuxerCaptureWrapper,com.cubi.smartcameraengine.capture.MediaEncoder$MediaEncoderListener,int,int,boolean,boolean,float,float,boolean,com.cubi.smartcameraengine.egl.filter.GlFilter):43:46 -> <init>
    1:2:void frameAvailableSoon(int,float[],float[],float):60:61 -> frameAvailableSoon
    3:4:boolean frameAvailableSoon():69:70 -> frameAvailableSoon
    1:3:void prepare():77:79 -> prepare
    4:21:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):144:161 -> prepare
    4:21:void prepare():81 -> prepare
    22:33:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):178:189 -> prepare
    22:33:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):162 -> prepare
    22:33:void prepare():81 -> prepare
    34:34:boolean isRecognizedViewoFormat(int):202:202 -> prepare
    34:34:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):190 -> prepare
    34:34:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):162 -> prepare
    34:34:void prepare():81 -> prepare
    35:35:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):197:197 -> prepare
    35:35:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):162 -> prepare
    35:35:void prepare():81 -> prepare
    36:37:int selectColorFormat(android.media.MediaCodecInfo,java.lang.String):185:186 -> prepare
    36:37:android.media.MediaCodecInfo selectVideoCodec(java.lang.String):162 -> prepare
    36:37:void prepare():81 -> prepare
    38:45:void prepare():84:91 -> prepare
    46:46:int calcBitRate(int,int):133:133 -> prepare
    46:46:void prepare():91 -> prepare
    47:64:void prepare():91:108 -> prepare
    1:10:void release():119:128 -> release
    1:1:void setEglContext(android.opengl.EGLContext,int):114:114 -> setEglContext
    1:3:void signalEndOfInputStream():208:210 -> signalEndOfInputStream
com.cubi.smartcameraengine.egl.DefaultConfigChooser -> com.cubi.smartcameraengine.egl.DefaultConfigChooser:
    int depthSize -> f
    int stencilSize -> g
    int blueSize -> d
    int[] configSpec -> a
    int alphaSize -> e
    int redSize -> b
    int greenSize -> c
    1:1:void <init>(int):33:33 -> <init>
    2:2:void <init>(boolean,int):37:37 -> <init>
    3:4:void <init>(int,int,int,int,int,int,int):55:56 -> <init>
    5:10:int[] filterConfigSpec(int[],int):80:85 -> <init>
    5:10:void <init>(int,int,int,int,int,int,int):56 -> <init>
    11:25:void <init>(int,int,int,int,int,int,int):56:70 -> <init>
    1:3:int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int):133:135 -> a
    1:12:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):94:105 -> chooseConfig
    13:21:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]):116:124 -> chooseConfig
    13:21:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):108 -> chooseConfig
    22:22:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):110:110 -> chooseConfig
    23:23:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):106:106 -> chooseConfig
    24:24:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):100:100 -> chooseConfig
    25:25:javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay):96:96 -> chooseConfig
com.cubi.smartcameraengine.egl.DefaultContextFactory -> com.cubi.smartcameraengine.egl.DefaultContextFactory:
    int EGLContextClientVersion -> a
    1:2:void <init>(int):24:25 -> <init>
    1:6:javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig):33:38 -> createContext
    1:3:void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext):43:45 -> destroyContext
com.cubi.smartcameraengine.egl.EglUtil -> com.cubi.smartcameraengine.egl.EglUtil:
    1:1:void <init>():29:29 -> <init>
    1:1:int createBuffer(float[]):76:76 -> createBuffer
    2:5:int createBuffer(java.nio.FloatBuffer):80:83 -> createBuffer
    1:14:int createProgram(int,int):50:63 -> createProgram
    15:15:int createProgram(int,int):52:52 -> createProgram
    1:7:int loadShader(java.lang.String,int):37:43 -> loadShader
    1:23:int loadTexture(android.graphics.Bitmap,int,boolean):102:124 -> loadTexture
    1:4:void setupSampler(int,int,int):69:72 -> setupSampler
    1:5:java.nio.FloatBuffer toFloatBuffer(float[]):87:91 -> toFloatBuffer
    1:3:void updateBufferData(int,java.nio.FloatBuffer):96:98 -> updateBufferData
com.cubi.smartcameraengine.egl.GLES20ConfigChooser -> com.cubi.smartcameraengine.egl.GLES20ConfigChooser:
    1:1:void <init>(boolean):12:12 -> <init>
com.cubi.smartcameraengine.egl.GLES20ContextFactory -> com.cubi.smartcameraengine.egl.GLES20ContextFactory:
    1:1:void <init>():12:12 -> <init>
com.cubi.smartcameraengine.egl.GLES20FramebufferObject -> com.cubi.smartcameraengine.egl.GLES20FramebufferObject:
    int renderBufferName -> d
    int texName -> e
    int height -> b
    int framebufferName -> c
    int width -> a
    1:1:void <init>():26:26 -> <init>
    1:1:void enable():118:118 -> enable
    1:1:int getHeight():38:38 -> getHeight
    1:1:int getTexName():42:42 -> getTexName
    1:1:int getWidth():34:34 -> getWidth
    1:10:void release():105:114 -> release
    1:56:void setup(int,int):46:101 -> setup
    57:61:void setup(int,int):92:96 -> setup
    62:62:void setup(int,int):55:55 -> setup
    63:63:void setup(int,int):50:50 -> setup
com.cubi.smartcameraengine.egl.GlFrameBufferObjectRenderer -> com.cubi.smartcameraengine.egl.GlFrameBufferObjectRenderer:
    java.util.Queue runOnDraw -> c
    com.cubi.smartcameraengine.egl.filter.GlFilter normalShader -> b
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject framebufferObject -> a
    1:2:void <init>():30:31 -> <init>
    1:13:void onDrawFrame(javax.microedition.khronos.opengles.GL10):53:65 -> onDrawFrame
    14:14:void onDrawFrame(javax.microedition.khronos.opengles.GL10):57:57 -> onDrawFrame
    1:4:void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int):45:48 -> onSurfaceChanged
    1:4:void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig):37:40 -> onSurfaceCreated
com.cubi.smartcameraengine.egl.GlPreview -> com.cubi.smartcameraengine.egl.GlPreview:
    int texTarget -> i
    1:4:java.lang.String createFragmentShaderSourceOESIfNeed(int):46:49 -> <init>
    1:4:void <init>(int):40 -> <init>
    5:6:void <init>(int):40:41 -> <init>
    1:22:void draw(int,float[],float[],float):65:86 -> draw
    1:6:void setup():56:61 -> setup
com.cubi.smartcameraengine.egl.GlPreviewRenderer -> com.cubi.smartcameraengine.egl.GlPreviewRenderer:
    com.cubi.smartcameraengine.egl.GlSurfaceTexture previewTexture -> e
    com.cubi.smartcameraengine.egl.filter.GlFilter glFilter -> o
    float[] STMatrix -> k
    boolean isNewShader -> p
    float[] MMatrix -> i
    float[] VMatrix -> j
    float[] MVPMatrix -> g
    com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener surfaceCreateListener -> y
    float[] ProjMatrix -> h
    int texName -> f
    android.opengl.GLSurfaceView glView -> l
    com.cubi.smartcameraengine.egl.GlPreview previewShader -> n
    android.os.Handler handler -> d
    com.cubi.smartcameraengine.Resolution cameraResolution -> v
    int updateTexImageCompare -> x
    float gestureScale -> u
    float drawScale -> t
    float scaleRatio -> s
    int updateTexImageCounter -> w
    float aspectRatio -> r
    com.cubi.smartcameraengine.egl.GLES20FramebufferObject filterFramebufferObject -> m
    com.cubi.smartcameraengine.capture.MediaVideoEncoder videoEncoder -> z
    int angle -> q
    1:1:void <init>(android.opengl.GLSurfaceView):66:66 -> <init>
    2:47:void <init>(android.opengl.GLSurfaceView):29:74 -> <init>
    1:1:boolean access$102(com.cubi.smartcameraengine.egl.GlPreviewRenderer,boolean):27:27 -> a
    1:1:com.cubi.smartcameraengine.egl.filter.GlFilter getFilter():304:304 -> getFilter
    1:1:com.cubi.smartcameraengine.egl.GlSurfaceTexture getPreviewTexture():287:287 -> getPreviewTexture
    1:53:void onDrawFrame(com.cubi.smartcameraengine.egl.GLES20FramebufferObject):211:263 -> onDrawFrame
    54:54:void onDrawFrame(com.cubi.smartcameraengine.egl.GLES20FramebufferObject):230:230 -> onDrawFrame
    1:2:void onFrameAvailable(android.graphics.SurfaceTexture):143:144 -> onFrameAvailable
    1:22:void onStartPreview(float,float,boolean):79:100 -> onStartPreview
    23:44:void onStartPreview(float,float,boolean):98:119 -> onStartPreview
    1:7:void onSurfaceChanged(int,int):198:204 -> onSurfaceChanged
    1:36:void onSurfaceCreated(javax.microedition.khronos.egl.EGLConfig):149:184 -> onSurfaceCreated
    1:1:void release():308:308 -> release
    1:5:void setAngle(int):291:295 -> setAngle
    6:6:void setAngle(int):293:293 -> setAngle
    1:1:void setCameraResolution(com.cubi.smartcameraengine.Resolution):268:268 -> setCameraResolution
    1:1:void setGestureScale(float):300:300 -> setGestureScale
    1:1:void setGlFilter(com.cubi.smartcameraengine.egl.filter.GlFilter):126:126 -> setGlFilter
    1:1:void setSurfaceCreateListener(com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener):323:323 -> setSurfaceCreateListener
    1:1:void setVideoEncoder(com.cubi.smartcameraengine.capture.MediaVideoEncoder):272:272 -> setVideoEncoder
com.cubi.smartcameraengine.egl.GlPreviewRenderer$1 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$a:
    com.cubi.smartcameraengine.egl.filter.GlFilter val$filter -> a
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> b
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.egl.filter.GlFilter):126:126 -> <init>
    1:1:void run():129:129 -> run
    2:2:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$000(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    2:2:void run():129 -> run
    3:5:void run():130:132 -> run
    6:6:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$002(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.egl.filter.GlFilter):27:27 -> run
    6:6:void run():132 -> run
    7:8:void run():133:134 -> run
    9:9:android.opengl.GLSurfaceView com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$200(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    9:9:void run():134 -> run
    10:10:void run():134:134 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$2 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$b:
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer):184:184 -> <init>
    1:1:void run():187:187 -> run
    2:2:com.cubi.smartcameraengine.egl.GlPreviewRenderer$SurfaceCreateListener com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$300(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    2:2:void run():187 -> run
    3:3:com.cubi.smartcameraengine.egl.GlSurfaceTexture com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$400(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    3:3:void run():189 -> run
    4:4:void run():189:189 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$3 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$c:
    com.cubi.smartcameraengine.capture.MediaVideoEncoder val$encoder -> a
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> b
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.capture.MediaVideoEncoder):272:272 -> <init>
    1:3:void run():275:277 -> run
    4:4:int com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$500(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    4:4:void run():277 -> run
    5:7:void run():277:279 -> run
    8:8:com.cubi.smartcameraengine.capture.MediaVideoEncoder com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$602(com.cubi.smartcameraengine.egl.GlPreviewRenderer,com.cubi.smartcameraengine.capture.MediaVideoEncoder):27:27 -> run
    8:8:void run():279 -> run
    9:9:void run():280:280 -> run
com.cubi.smartcameraengine.egl.GlPreviewRenderer$4 -> com.cubi.smartcameraengine.egl.GlPreviewRenderer$d:
    com.cubi.smartcameraengine.egl.GlPreviewRenderer this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.GlPreviewRenderer):308:308 -> <init>
    1:1:void run():311:311 -> run
    2:2:com.cubi.smartcameraengine.egl.filter.GlFilter com.cubi.smartcameraengine.egl.GlPreviewRenderer.access$000(com.cubi.smartcameraengine.egl.GlPreviewRenderer):27:27 -> run
    2:2:void run():311 -> run
    3:3:void run():312:312 -> run
com.cubi.smartcameraengine.egl.GlSurfaceTexture -> com.cubi.smartcameraengine.egl.GlSurfaceTexture:
    android.graphics.SurfaceTexture surfaceTexture -> a
    android.graphics.SurfaceTexture$OnFrameAvailableListener onFrameAvailableListener -> b
    1:3:void <init>(int):14:16 -> <init>
    1:1:android.graphics.SurfaceTexture getSurfaceTexture():38:38 -> getSurfaceTexture
    1:1:void getTransformMatrix(float[]):34:34 -> getTransformMatrix
    1:2:void onFrameAvailable(android.graphics.SurfaceTexture):42:43 -> onFrameAvailable
    1:1:void release():48:48 -> release
    1:1:void setOnFrameAvailableListener(android.graphics.SurfaceTexture$OnFrameAvailableListener):21:21 -> setOnFrameAvailableListener
    1:1:void updateTexImage():30:30 -> updateTexImage
com.cubi.smartcameraengine.egl.filter.GlBilateralFilter -> com.cubi.smartcameraengine.egl.filter.GlBilateralFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():116:116 -> <init>
    2:4:void <init>():111:113 -> <init>
    1:1:float getBlurSize():137:137 -> getBlurSize
    1:1:float getTexelHeightOffset():129:129 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():121:121 -> getTexelWidthOffset
    1:3:void onDraw():146:148 -> onDraw
    1:1:void setBlurSize(float):141:141 -> setBlurSize
    1:1:void setTexelHeightOffset(float):133:133 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):125:125 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlBoxBlurFilter -> com.cubi.smartcameraengine.egl.filter.GlBoxBlurFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():64:64 -> <init>
    2:4:void <init>():58:60 -> <init>
    1:1:float getBlurSize():84:84 -> getBlurSize
    1:1:float getTexelHeightOffset():76:76 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():68:68 -> getTexelWidthOffset
    1:3:void onDraw():94:96 -> onDraw
    1:1:void setBlurSize(float):88:88 -> setBlurSize
    1:1:void setTexelHeightOffset(float):80:80 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):72:72 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlBulgeDistortionFilter -> com.cubi.smartcameraengine.egl.filter.GlBulgeDistortionFilter:
    float scale -> l
    float radius -> k
    float centerY -> j
    float centerX -> i
    1:1:void <init>():41:41 -> <init>
    2:5:void <init>():35:38 -> <init>
    1:1:float getCenterX():45:45 -> getCenterX
    1:1:float getCenterY():53:53 -> getCenterY
    1:1:float getRadius():61:61 -> getRadius
    1:1:float getScale():69:69 -> getScale
    1:3:void onDraw():80:82 -> onDraw
    1:1:void setCenterX(float):49:49 -> setCenterX
    1:1:void setCenterY(float):57:57 -> setCenterY
    1:1:void setRadius(float):65:65 -> setRadius
    1:1:void setScale(float):73:73 -> setScale
com.cubi.smartcameraengine.egl.filter.GlCGAColorspaceFilter -> com.cubi.smartcameraengine.egl.filter.GlCGAColorspaceFilter:
    1:1:void <init>():53:53 -> <init>
com.cubi.smartcameraengine.egl.filter.GlFilter -> com.cubi.smartcameraengine.egl.filter.GlFilter:
    java.util.HashMap handleMap -> g
    float[] VERTICES_DATA -> h
    int vertexBufferName -> f
    java.lang.String vertexShaderSource -> a
    int vertexShader -> d
    int fragmentShader -> e
    java.lang.String fragmentShaderSource -> b
    int program -> c
    1:1:void <clinit>():50:50 -> <clinit>
    1:1:void <init>():78:78 -> <init>
    2:2:void <init>(android.content.res.Resources,int,int):82:82 -> <init>
    3:3:void <init>(java.lang.String,java.lang.String):85:85 -> <init>
    4:70:void <init>(java.lang.String,java.lang.String):21:87 -> <init>
    1:20:void draw(int,com.cubi.smartcameraengine.egl.GLES20FramebufferObject):133:152 -> draw
    1:13:int getHandle(java.lang.String):167:179 -> getHandle
    14:14:int getHandle(java.lang.String):177:177 -> getHandle
    1:1:java.lang.String getName():25:25 -> getName
    1:1:int getVertexBufferName():163:163 -> getVertexBufferName
    1:10:void release():114:123 -> release
    1:1:void setFragmentShaderSource(java.lang.String):104:104 -> setFragmentShaderSource
    1:1:void setShaderName(java.lang.String):29:29 -> setShaderName
    1:10:void setup():91:100 -> setup
    1:1:void useProgram():159:159 -> useProgram
com.cubi.smartcameraengine.egl.filter.GlFilterGroup -> com.cubi.smartcameraengine.egl.filter.GlFilterGroup:
    java.util.ArrayList list -> j
    int prevTexName -> k
    java.util.Collection filters -> i
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlFilter[]):27:27 -> <init>
    2:2:void <init>(java.util.Collection):30:30 -> <init>
    3:10:void <init>(java.util.Collection):24:31 -> <init>
    1:20:void draw(int,com.cubi.smartcameraengine.egl.GLES20FramebufferObject):88:107 -> draw
    1:10:void release():58:67 -> release
    1:8:void setFrameSize(int,int):72:79 -> setFrameSize
    1:15:void setup():36:50 -> setup
com.cubi.smartcameraengine.egl.filter.GlGaussianBlurFilter -> com.cubi.smartcameraengine.egl.filter.GlGaussianBlurFilter:
    float blurSize -> k
    float texelHeightOffset -> j
    float texelWidthOffset -> i
    1:1:void <init>():69:69 -> <init>
    2:4:void <init>():64:66 -> <init>
    1:1:float getBlurSize():89:89 -> getBlurSize
    1:1:float getTexelHeightOffset():81:81 -> getTexelHeightOffset
    1:1:float getTexelWidthOffset():73:73 -> getTexelWidthOffset
    1:3:void onDraw():99:101 -> onDraw
    1:1:void setBlurSize(float):93:93 -> setBlurSize
    1:1:void setTexelHeightOffset(float):85:85 -> setTexelHeightOffset
    1:1:void setTexelWidthOffset(float):77:77 -> setTexelWidthOffset
com.cubi.smartcameraengine.egl.filter.GlGrayScaleFilter -> com.cubi.smartcameraengine.egl.filter.GlGrayScaleFilter:
    1:1:void <init>():20:20 -> <init>
com.cubi.smartcameraengine.egl.filter.GlHazeFilter -> com.cubi.smartcameraengine.egl.filter.GlHazeFilter:
    float slope -> j
    float distance -> i
    1:1:void <init>():32:32 -> <init>
    2:3:void <init>():28:29 -> <init>
    1:1:float getDistance():36:36 -> getDistance
    1:1:float getSlope():44:44 -> getSlope
    1:2:void onDraw():53:54 -> onDraw
    1:1:void setDistance(float):40:40 -> setDistance
    1:1:void setSlope(float):48:48 -> setSlope
com.cubi.smartcameraengine.egl.filter.GlInvertFilter -> com.cubi.smartcameraengine.egl.filter.GlInvertFilter:
    1:1:void <init>():18:18 -> <init>
com.cubi.smartcameraengine.egl.filter.GlLookUpTableFilter -> com.cubi.smartcameraengine.egl.filter.GlLookUpTableFilter:
    int hTex -> i
    android.graphics.Bitmap lutTexture -> j
    1:3:void <init>(android.graphics.Bitmap):46:48 -> <init>
    4:6:void <init>(android.content.res.Resources,int):53:55 -> <init>
    1:4:void onDraw():64:67 -> onDraw
    1:3:void releaseLutBitmap():83:85 -> releaseLutBitmap
    1:2:void reset():90:91 -> reset
    1:1:void setup():72:72 -> setup
    2:3:void loadTexture():77:78 -> setup
    2:3:void setup():73 -> setup
com.cubi.smartcameraengine.egl.filter.GlMonochromeFilter -> com.cubi.smartcameraengine.egl.filter.GlMonochromeFilter:
    float intensity -> i
    float[] filterColor -> j
    1:1:void <init>():42:42 -> <init>
    2:3:void <init>():38:39 -> <init>
    1:1:float getIntensity():46:46 -> getIntensity
    1:2:void onDraw():55:56 -> onDraw
    1:1:void setIntensity(float):50:50 -> setIntensity
com.cubi.smartcameraengine.egl.filter.GlOverlayFilter -> com.cubi.smartcameraengine.egl.filter.GlOverlayFilter:
    int[] textures -> i
    android.graphics.Bitmap bitmap -> j
    1:1:void <init>():23:23 -> <init>
    2:6:void <init>():16:20 -> <init>
    1:2:void createBitmap():49:50 -> a
    1:22:void onDraw():69:90 -> onDraw
    1:2:void releaseBitmap(android.graphics.Bitmap):96:97 -> releaseBitmap
    1:2:void setFrameSize(int,int):44:45 -> setFrameSize
    1:1:void setResolution(android.util.Size):39:39 -> setResolution
    1:10:void setup():55:64 -> setup
com.cubi.smartcameraengine.egl.filter.GlSepiaFilter -> com.cubi.smartcameraengine.egl.filter.GlSepiaFilter:
    1:1:void <init>():21:21 -> <init>
com.cubi.smartcameraengine.egl.filter.GlSharpenFilter -> com.cubi.smartcameraengine.egl.filter.GlSharpenFilter:
    float sharpness -> k
    float imageHeightFactor -> j
    float imageWidthFactor -> i
    1:1:void <init>():73:73 -> <init>
    2:4:void <init>():68:70 -> <init>
    1:1:float getSharpness():77:77 -> getSharpness
    1:3:void onDraw():93:95 -> onDraw
    1:2:void setFrameSize(int,int):87:88 -> setFrameSize
    1:1:void setSharpness(float):81:81 -> setSharpness
com.cubi.smartcameraengine.egl.filter.GlSphereRefractionFilter -> com.cubi.smartcameraengine.egl.filter.GlSphereRefractionFilter:
    float aspectRatio -> l
    float radius -> k
    float centerY -> j
    float centerX -> i
    float refractiveIndex -> m
    1:1:void <init>():43:43 -> <init>
    2:6:void <init>():36:40 -> <init>
    1:4:void onDraw():70:73 -> onDraw
    1:1:void setAspectRatio(float):59:59 -> setAspectRatio
    1:1:void setCenterX(float):47:47 -> setCenterX
    1:1:void setCenterY(float):51:51 -> setCenterY
    1:1:void setRadius(float):55:55 -> setRadius
    1:1:void setRefractiveIndex(float):63:63 -> setRefractiveIndex
com.cubi.smartcameraengine.egl.filter.GlThreex3TextureSamplingFilter -> com.cubi.smartcameraengine.egl.filter.GlThreex3TextureSamplingFilter:
    float texelHeight -> j
    float texelWidth -> i
    1:1:void <init>(java.lang.String):54:54 -> <init>
    1:1:float getTexelHeight():66:66 -> getTexelHeight
    1:1:float getTexelWidth():58:58 -> getTexelWidth
    1:2:void onDraw():81:82 -> onDraw
    1:2:void setFrameSize(int,int):75:76 -> setFrameSize
    1:1:void setTexelHeight(float):70:70 -> setTexelHeight
    1:1:void setTexelWidth(float):62:62 -> setTexelWidth
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter:
    java.util.ArrayList greenCurve -> o
    java.util.ArrayList redCurve -> n
    java.util.ArrayList rgbCompositeCurve -> m
    int[] textures -> r
    android.graphics.PointF[] rgbCompositeControlPoints -> i
    android.graphics.PointF[] redControlPoints -> j
    android.graphics.PointF[] greenControlPoints -> k
    android.graphics.PointF[] blueControlPoints -> l
    java.util.LinkedList runOnDraw -> q
    byte[] toneCurveByteArray -> s
    java.util.ArrayList blueCurve -> p
    1:1:void <init>(java.io.InputStream):54:54 -> <init>
    2:15:void <init>(java.io.InputStream):48:61 -> <init>
    16:48:void setFromCurveFileInputStream(java.io.InputStream):103:135 -> <init>
    16:48:void <init>(java.io.InputStream):63 -> <init>
    49:49:void <init>(java.io.InputStream):65:65 -> <init>
    50:52:void setRgbCompositeControlPoints(android.graphics.PointF[]):144:146 -> <init>
    50:52:void <init>(java.io.InputStream):65 -> <init>
    53:53:void <init>(java.io.InputStream):66:66 -> <init>
    54:56:void setRedControlPoints(android.graphics.PointF[]):150:152 -> <init>
    54:56:void <init>(java.io.InputStream):66 -> <init>
    57:57:void <init>(java.io.InputStream):67:67 -> <init>
    58:60:void setGreenControlPoints(android.graphics.PointF[]):156:158 -> <init>
    58:60:void <init>(java.io.InputStream):67 -> <init>
    61:61:void <init>(java.io.InputStream):68:68 -> <init>
    62:64:void setBlueControlPoints(android.graphics.PointF[]):162:164 -> <init>
    62:64:void <init>(java.io.InputStream):68 -> <init>
    1:1:short readShort(java.io.InputStream):140:140 -> a
    2:4:void runOnDraw(java.lang.Runnable):168:170 -> a
    5:5:void updateToneCurveTexture():174:174 -> a
    6:29:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):207:230 -> a
    30:78:java.util.ArrayList createSecondDerivative(android.graphics.Point[]):319:367 -> a
    30:78:java.util.ArrayList createSplineCurve2(android.graphics.Point[]):270 -> a
    30:78:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):233 -> a
    79:118:java.util.ArrayList createSplineCurve2(android.graphics.Point[]):274:313 -> a
    79:118:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):233 -> a
    119:145:java.util.ArrayList createSplineCurve(android.graphics.PointF[]):237:263 -> a
    1:8:void onDraw():91:98 -> onDraw
    1:11:void setup():74:84 -> setup
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$1 -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$a:
    com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter this$0 -> a
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):174:174 -> <init>
    1:2:void run():177:178 -> run
    3:3:int[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$000(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    3:3:void run():178 -> run
    4:6:void run():178:180 -> run
    7:7:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$100(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    7:7:void run():180 -> run
    8:8:void run():180:180 -> run
    9:9:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$200(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    9:9:void run():180 -> run
    10:10:void run():180:180 -> run
    11:11:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$300(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    11:11:void run():180 -> run
    12:12:void run():180:180 -> run
    13:13:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    13:13:void run():180 -> run
    14:15:void run():180:181 -> run
    16:16:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$502(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter,byte[]):18:18 -> run
    16:16:void run():181 -> run
    17:17:void run():184:184 -> run
    18:18:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter) -> run
    18:18:void run():184 -> run
    19:19:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$300(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    19:19:void run():184 -> run
    20:20:void run():184:184 -> run
    21:21:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    21:21:void run():184 -> run
    22:23:void run():184:185 -> run
    24:24:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    24:24:void run():185 -> run
    25:25:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$200(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    25:25:void run():185 -> run
    26:26:void run():185:185 -> run
    27:27:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    27:27:void run():185 -> run
    28:29:void run():185:186 -> run
    30:30:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    30:30:void run():186 -> run
    31:31:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$100(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    31:31:void run():186 -> run
    32:32:void run():186:186 -> run
    33:33:java.util.ArrayList com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$400(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    33:33:void run():186 -> run
    34:35:void run():186:187 -> run
    36:36:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    36:36:void run():187 -> run
    37:40:void run():187:190 -> run
    41:41:byte[] com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter.access$500(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):18:18 -> run
    41:41:void run():190 -> run
    42:42:void run():190:190 -> run
com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$2 -> com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter$b:
    1:1:void <init>(com.cubi.smartcameraengine.egl.filter.GlToneCurveFilter):213:213 -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object):213:213 -> compare
    2:2:int compare(android.graphics.PointF,android.graphics.PointF):216:216 -> compare
    2:2:int compare(java.lang.Object,java.lang.Object):213 -> compare
com.cubi.smartcameraengine.egl.filter.GlToneFilter -> com.cubi.smartcameraengine.egl.filter.GlToneFilter:
    float quantizationLevels -> l
    float threshold -> k
    1:1:void <init>():59:59 -> <init>
    2:3:void <init>():54:55 -> <init>
    1:1:float getQuantizationLevels():73:73 -> getQuantizationLevels
    1:1:float getThreshold():65:65 -> getThreshold
    1:2:void onDraw():84:85 -> onDraw
    1:1:void setQuantizationLevels(float):77:77 -> setQuantizationLevels
    1:1:void setThreshold(float):69:69 -> setThreshold
com.cubi.smartcameraengine.egl.filter.GlVignetteFilter -> com.cubi.smartcameraengine.egl.filter.GlVignetteFilter:
    float vignetteStart -> l
    float vignetteCenterY -> j
    float[] vignetteColor -> k
    float vignetteCenterX -> i
    float vignetteEnd -> m
    1:1:void <init>():36:36 -> <init>
    2:6:void <init>():29:33 -> <init>
    1:1:float getVignetteEnd():49:49 -> getVignetteEnd
    1:1:float getVignetteStart():41:41 -> getVignetteStart
    1:4:void onDraw():60:63 -> onDraw
    1:1:void setVignetteEnd(float):53:53 -> setVignetteEnd
    1:1:void setVignetteStart(float):45:45 -> setVignetteStart
com.cubi.smartcameraengine.egl.filter.GlWeakPixelInclusionFilter -> com.cubi.smartcameraengine.egl.filter.GlWeakPixelInclusionFilter:
    1:1:void <init>():45:45 -> <init>
